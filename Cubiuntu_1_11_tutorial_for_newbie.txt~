這篇文章記錄了
1.把Cubiuntu 1.11版的Image刷到MicroSD卡
2.將完成的MicroSD卡插入CubieTruck，開機後設定網路參數
3.打開音效，安裝必要軟體（繁體中文支援，中文輸入法，Oracle JDK 8)
4.把CubieTruck板子上閃來閃去的LED燈關掉



操作環境
製作MicroSD卡時需要：
一台安裝了Ubuntu 14.04 lts的筆記型電腦，請打開Synaptic套件管理員
將Gparted分割區管理程式安裝上去，以方便新增刪除分割區
還有為了調整MicroSD卡第一分割區裡的script.bin
需要sunxi-tools，代碼放在Github，請確定筆記型電腦裡也安裝了git-core
在終端機執行
git clone https://github.com/linux-sunxi/sunxi-tools
可以取得sunxi-tools
然後在終端機
# apt-get install libusb-1.0-0-dev
# cd sunxi-tools
# make
然後你在sunxi-tools目錄下，就會看到bin2fex及fex2bin兩個工具被編譯出來了
關於sunxi-tools的詳細說明你可以參考這裡
http://linux-sunxi.org/Sunxi-tools
本篇文章使用16GB的MicroSD卡



現在開始步驟1.把Cubiuntu 1.11版的Image刷到MicroSD卡
先去Cubieboard官網下載Image檔案
http://dl.cubieboard.org/cubiuntux/cubiuntuCT/cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip
你可以在終端機檢查它的md5sum正不正確
# md5sum cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip
然後解開它
# unzip cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip 
你會得到待會兒我們要用來寫入MicroSD卡的影像檔
cubiuntu_ct_1.11_sd_062c9bc17099e1d7ceb80e341da7fd71.img

再來是u-boot
u-boot-sunxi-with-spl-ct-20140107.bin
一樣可以在Cubieboard官網上找到
http://dl.cubieboard.org/software/a20-cubietruck/lubuntu/ct-lubuntu-card0-v1.00/u-boot-sunxi-with-spl-ct-20140107.bin

現在我假設你把影像檔和u-boot檔都放到/tmp目錄中了
然後把MicroSD卡插到USB讀卡機上，然後再把讀卡機插上筆記型電腦
寫入MicroSD卡之前，我們必須先把MicroSD卡上的資料整個清除乾淨
請確認你的MicroSD卡的裝置代號，怎麼確認呢？
你可以打開Ubuntu的磁碟管理程式，在畫面最左上角那個「搜尋您的電腦和線上來源」輸入「disk」
就會跳出來「磁碟」，我的是/dev/sdc，有的時候是/dev/sdb
你一定要確定MicroSD卡使用的裝置代號，不然會發生無法預期的後果
（例如：dd指令把你筆記型電腦的開機硬碟洗乾淨了，別擔心，只要保持清醒並確認你的MicroSD卡的裝置代號，這種事就不會發生）

清除MicroSD卡，你可以用Gparted把上面原來有的分割區都刪除
或是用指令
# fdisk /dev/sdX
來刪除，注意那個/dev/sdX實際上在你的電腦可能是/dev/sdb或是/dev/sdc，我不知道，你必須就你的情況自行判斷，我的是/dev/sdc

刪除完之後，把MicroSD卡整個格式化成ext4
# mkfs.ext4 /dev/sdX

接下來為了工作方便，我們要設定4個環境變數
# card=/dev/sdc
# image=/tmp/cubiuntu_ct_1.11_sd_062c9bc17099e1d7ceb80e341da7fd71.img
# bootloader=/tmp/u-boot-sunxi-with-spl-ct-20140107.bin
# sunxi_tools_path=/home/anntony/CubieTruck_Download/sunxi-tools

現在執行下面的指令把MicroSD卡前面的地方清乾淨
# dd if=/dev/zero of=${card} bs=512 seek=1 count=2047

（補充：英國人的作法）
# dd if=/dev/zero of=${card} bs=1M count=1

寫入bootloader
# dd if=$bootloader of=$card bs=1024 seek=8

接下來把Image寫入到MicroSD卡
# dd if=$image of=$card bs=1M
# sync

寫完之後別急著把卡插到CubieTruck裡，因為VGA的顯示參數還沒有改
我的LCD螢幕是23吋的，可以顯示到1920X1080，然後是15 pin的接頭，我沒有HDMI
剛寫完Image到卡片裡，筆電的Ubuntu的磁碟管理程式，還沒發現MicroSD卡已經被寫入了
所以你要手動把USB讀卡機拔起來，再插回筆電裡，Ubuntu才會知道MicroSD卡的最新狀態
重新再插一次USB讀卡機之後，可以發現Ubuntu查覺到了MicroSD卡的最新狀態
我們的MicroSD卡因為剛才的dd if=$image of=$card bs=1M 這條指令
被寫入了兩個分割區，第一個是16MB，第二個是3.9GB，然後後面整整12GB都沒有用到
記住你一定要把第二個分割區擴充到整張MicroSD卡的空間
我遇到一個情況，就是即使我輸入了正確的用戶名和密碼，卻仍是一直被LXDE桌面環境踢出來
就是因為第二個分割區的磁碟空間不夠使用
現在我們先調整一下第二個分割區的大小，再修正開機的VGA顯示參數

調整分割區的大小，基本上我是照著這篇教的
http://geekpeek.net/resize-filesystem-fdisk-resize2fs/

確定你的/dev/sdc1和/dev/sdc2是卸載的，然後執行指令
# fdisk $card
按下d (Enter) 2 (Enter) p (Enter) w (Enter)
來刪除第二個分割區（也就是3.9GB的那個待擴充的分割區，別怕，第二個分割區上面的資料不會不見）

再一次執行
# fdisk $card
按下n (Enter) p (Enter) 2 (Enter) p (Enter) w (Enter)
這個動作會把第二個分割區擴充到這張卡能負擔的極限

擴充前先檢查分割區
# e2fsck -f ${card}2

變大吧變大吧
# resize2fs ${card}2

現在你再到Ubuntu的磁碟管理程式裡，可以清楚看到第二個分割區從3.9GB變成16GB了，耶，爽啊
好的，現在我們要來修改VGA參數
# mkdir /tmp/sdc1
# mount /dev/sdc1 /tmp/sdc1
# cd /tmp/sdc1
# ls
# cp ./uEnv.ct ./uEnv.ct.default
# vi ./uEnv.ct

原來預設值是這樣
extraargs=disp.screen0_output_type=3 disp.screen0_output_mode=1280x720p60 consoleblank=0 cubietruck 
sunxi_ve_mem_reserve=128 
root=/dev/mmcblk0p2 rootwait 
partition=0:1
kernel=/uImage.3.4.79-sun7i+
script=script-ct.bin

請把它改成這樣
extraargs=disp.screen0_output_type=4 disp.screen0_output_mode=10 consoleblank=0 cubietruck 
sunxi_ve_mem_reserve=128 
root=/dev/mmcblk0p2 rootwait 
partition=0:1
kernel=/uImage.3.4.79-sun7i+
script=script-ct.bin

還有另一個檔案script-ct.bin也要改
# $sunxi_tools_path/bin2fex script-ct.bin 1.fex
# cat 1.fex |grep screen0

原來的值是這樣
screen0_output_type = 4
screen0_output_mode = 4

請改成這樣
screen0_output_type = 4
screen0_output_mode = 10

然後再把1.fex加工成script-ct.bin
# $sunxi_tools_path/fex2bin 1.fex script-ct.bin

同步一下，卸載，然後就大功告成
# sync
# umount /tmp/sdc1

現在就把MicroSD卡插到CubieTruck裡面，開機，準備要來接通網路

===============================================================================

現在開始步驟2.將完成的MicroSD卡插入CubieTruck，開機後設定網路參數
開機之後，如果你的路由器或分享器有DHCP Server功能，而且你的網路線又插在CubieTruck上面
那麼你應該可以動態取得一個IP了，在這裡我想要讓我的eth0和wlan0都可以動態地透過DHCP取得IP
打開終端機

$ sudo -i
# lsmod | grep bcmd

這時候會看到系統已經有載入bcmdhd模組了，這就是無線網卡的驅動程式 
再執行
# ifconfig
然後發現只有eth0和lo，並沒有發現wlan0
於是再執行
# ifconfig wlan0 up
# ifconfig
這個時候可以看到wlan0跑起來了，不過還沒有動態取得IP
首先要將無線網路的SSID和密碼寫到/etc/wpa_supplicant.conf裡去
# iwlist wlan0 scan
# iwlist wlan0 scan |grep D-Link
掃描之後可以看到我使用的無線網路ESSID是D-Link_DIR-600M
# wpa_passphrase D-Link_DIR-600M mypassword >> /etc/wpa_supplicant.conf
# cat /etc/wpa_supplicant.conf
現在我們已經有無線網路的設定了，接下來請修改/etc/network/interfaces設定檔
# vi /etc/network/interfaces
改成這樣（忽略所有以#字元開頭的注解行，我只列出有作用的列數）
auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
iface eth0 inet dhcp

auto wlan0
iface wlan0 inet dhcp
wpa-conf /etc/wpa_supplicant.conf
修改完之後，執行
# sync
# init 6
重新開機，看看無線網路介面wlan0是否成功啟動了？

===============================================================================
網路連通了之後，現在開始步驟3.打開音效，安裝必要軟體（繁體中文支援，中文輸入法，Oracle JDK 8)

在安裝軟體之前
先更新源列表，我沒有去動那個預設的/etc/apt/sources.list
我另外新增了一個/etc/apt/sources.list.d/taiwan.list
內容如下
deb http://tw.archive.ubuntu.com/ubuntu precise main restricted universe multiverse
deb http://tw.archive.ubuntu.com/ubuntu precise-security main restricted universe multiverse
deb http://tw.archive.ubuntu.com/ubuntu precise-updates main restricted universe multiverse
deb http://tw.archive.ubuntu.com/ubuntu precise-backports main restricted universe multiverse
deb http://tw.archive.ubuntu.com/ubuntu precise-proposed main restricted universe multiverse
deb-src http://tw.archive.ubuntu.com/ubuntu precise main restricted universe multiverse
deb-src http://tw.archive.ubuntu.com/ubuntu precise-security main restricted universe multiverse
deb-src http://tw.archive.ubuntu.com/ubuntu precise-updates main restricted universe multiverse
deb-src http://tw.archive.ubuntu.com/ubuntu precise-backports main restricted universe multiverse
deb-src http://tw.archive.ubuntu.com/ubuntu precise-proposed main restricted universe multiverse
然後不要忘了執行
# apt-get update
這樣才會更新源列表
注意上面的precise，這表示Cubiuntu是基於Ubuntu 12.04去改出來的
每次你更新源列表的時候，要記得Ubuntu的版本號很重要，precise代表版本12.04


先安裝簡體及繁體支援好了
從畫面左下角的「CUBIUNTU」按鈕 -> Preferences -> Synaptic Package Manager
把套件管理員打開，用戶linaro的密碼是linaro，進入套件管理員後
按下上方工具列的「Search」按鈕，用關鍵字「language-pack han」搜尋
會找到
language-pack-gnome-zh-hans
language-pack-gnome-zh-hans-base
language-pack-gnome-zh-hant
language-pack-gnome-zh-hant-base
language-pack-zh-hans
language-pack-zh-hans-base
language-pack-zh-hant
language-pack-zh-hant-basse
這些全裝上

還有這些
firefox-locale-zh-hans
firefox-locale-zh-hant

還有中文字型
ttf-wqy-zenhei

安裝好之後，取消自動登入
因為自動登入幫我們選的Locale是英文
我們手動登入，才能選繁體中文
從畫面左下角的「CUBIUNTU」按鈕 -> CubieTweaks -> Special Tweaks > AutologinOFF
# sync
# init 6
重新開機之後，需要在畫面下方選擇Language: zh_HK 漢語（香港）
我不知道那裡出錯了
居然沒有zh_TW 漢語（台灣）的選項，這並不影響待會兒安裝中文輸入法或是瀏覽器的繁體中文顯示
只是桌面選單的用語有些會有香港味

打開Firefox瀏覽器之後
在Google首頁看到熟悉的繁體中文了
現在我們要來安裝中文輸入法
Cubiuntu裡預設安裝了ibus
所以我們再打開Synaptic套件管理員，請安裝ibus-chewing套件
這是注音輸入法，如果需要倉頡輸入法請安裝ibus-table-cangjie套件
如果Synaptic套件管理員一直當掉
那就在終端機直接下指令
# apt-get install ibus-chewing
# apt-get install ibus-table-cangjie
一樣可以安裝，安裝完成後在畫面的右下角有一個小小鍵盤的圖示，對它按右鍵選「重新啟動」
此時小小鍵盤圖示會消失一會兒，等它重新啟動完成，又會出現，再對它按右鍵選「偏好設定」
切換到第二個頁籤「輸入法」「選取輸入法」「漢語」，就可以看到剛才安裝的注音和倉頡
選了注音，然後按下右邊的「加入」按鈕，在第一頁「通用」的「下一個輸入法」
設定切換的「鍵盤快捷鍵」是Control+Shift+Shift_L，按下「確定」完成設定
為了方便，請在「通用」頁籤下方的「顯示語言面板」把這個選項改成「當啟用時」，
還是在「通用」頁籤，上方的「啟用或停用」，把它改成Control+space後，按下關閉，完成設定

如果要安裝嘸蝦米，請確定你有購買它的版權，然後參考這一篇
http://www.ubuntu-tw.org/modules/newbb/viewtopic.php?topic_id=43628
它一樣是Ubuntu上面ibus安裝嘸蝦米輸入法
（附注：deb包的安裝指令是dpkg -i xxxx-xxxx-xxxx.deb）

要注意的是，ibus在開機的時候並不會自動啟動，
我在Cubiuntu裡面也找不到關於可以在開機時自動啟動ibus的設定項
所以我再打開了Synaptic套件管理員，安裝了im-config套件
安裝完成後，在終端機執行
# im-config
然後會跳出一個對話框，讓你選擇預設的輸入法，此時請選擇ibus
下次開機的時候，ibus就會自動啟動了，不然每次都要手動去
CUBIUNTU -> Preferences -> Keyboard Input Methods手動叫醒ibus還滿累人的


現在繁體中文輸入法也有了，再來請打開音效
（我又把CubieTweaks > Special Tweaks > AutologinOn打開了）
在畫面左下方的「CUBIUNTU」-> Gnome-Center-> Sound 
在Hardware頁籤，把sunxi-CODEC和sunxi-sndspdif兩個預設都是Off的選項
在對話框的下方可以調整成「Analog Stereo Output」
然後在對話框上方要把OFF變更為ON，接著你會聽到「噗」的一聲
這就表示你已經成功把音效打開了


然後還有我發現系統時間怪怪的，需要調整成亞洲台北時間
CUBIUNTU -> Preferences -> Gnome-Center -> Date and Time
可以調整成Asia Taipei
這樣右下角的時間顯示就會正常
（預設是歐洲馬德里，因為包CUBIUNTU這個distribution的ikeeki應該是西班牙人）

最後是把板子上的LED關掉
CUBIUNTU -> CubieTweaks > Leds Tweaks > [顏色] Led
[顏色]有Blue、Orange、White、Green
選擇你想要關掉的LED燈，選None
記住要稍微等一下（大概十五秒），等桌面環境跳一個記事本對話框，
告訴你設定值會在下次開機生效，這樣才算關掉了
如果又突然懷念它那閃來閃去像聖誕樹的樣子
可以再選Default-On把它們打開


還有一個是原本的vi編輯器的上下左右會變成ABCD（莫名奇妙）
直接在終端機下指令安裝vim
apt-get install vim
安裝了vim之後
注解行（前面是以#字元開頭的行）是深藍色，
而背景是純黑色，根本什麼都看不見
在vim的Menu選單的Edit-> Profile Preferences也找不到任何地方可以改成亮一點的顏色
上網用「vim how to change color of comment text」爬文後
https://spinspire.com/article/change-default-comment-color-vim
在家目錄/home/linaro及/root下面都新增一个.vimrc的檔案
內容只有一行，就是
:highlight Comment ctermfg=green
這樣注解行就是亮綠色，背景色是黑色，這樣才有辦法工作
不然你以為我有寫輪眼嗎？黑色背景深藍色字是要怎麼看啊

到這裡好像是在微調Cubiuntu
我有找到一篇
http://www.forum-cubieboard.de/Thread-how-to-customize-cubiuntu
(How to customize cubiuntu)

另外忙了這麼久，我可能要研究一下Cubieboard官網上的這篇
http://docs.cubieboard.org/how_to_make_a_sd_image_from_sd_bootable_os
這一篇介紹了如何把一張可以開機的SD card，變成一個Image檔案
這對我很有幫助，因為安裝了這麼多軟體，也修改了這麼多組態
總是希望作個快照，下次就可以用這個Image直接刷出一張SD card


還有我打算再買一顆SATA2的2.5吋硬碟
我想把整个rootfs搬到SATA硬碟上
所以這一篇可能也要研究一下
http://www.cubieforums.com/index.php?topic=1485.0
（HOW TO INSTALL CUBIUNTU 1.1 ON SATA HDD）


還有要試著想辦法把SD啟動改成NAND啟動
這一篇是關鍵
http://linux-sunxi.org/Cubieboard/Installing_on_NAND


2014/06/14 15:47:03補充
我剛才又繼續爬了文
現在解決了中文locale只有zh_CN和zh_HK和zh_SG可是找不到zh_TW的問題

https://help.ubuntu.com/community/Locale
http://blog.changyy.org/2011/03/bash-warning-setlocale-lcctype-cannot.html
改成zh_TW.UTF-8之前
可以先使用指令看看目前的設定
# locale

這個指令會列出你目前Ubunu系統支援的locale
# locale -a

這個指令打印目前關於locale的組態檔
# cat /etc/default/locale


現在要切換到zh_TW.UTF-8，請用root權限執行
# locale-gen zh_TW.UTF-8
# update-locale LANG=zh_TW.UTF-8

然後請重新開機，設定就會生效
終於切換到漢語台灣了，呼
再執行剛才的
# locale
# locale -a
# cat /etc/default/local
看看有什麼不同？


我發現我的偽PSP裡面插著一塊Kinstom的8G MicroSD
我把上面重要資料都備份之後
刪了所有的分割區，把整張卡建立成/dev/sdc1
可是我執行了
# fsck.ext4 -v /dev/sdc1
之後，它一直說什麼bad superblock
於是我又執行了
# e2fsck -b 32768 /dev/sdc1
結果電腦一直問我xxxxxxxxx,fix<y>?
我一直回答y，回答了一千次以上（真的有一千次）
可是還是一直跳，我放棄回答了，按下了Ctrl+C中斷這個命令
改執行
# e2fsck -f -b 32768 -y /dev/sdc1
結果就是一路自動幫我回答y
參考這個人的解答
http://ubuntuforums.org/showthread.php?t=1245536
應該跳了至少一兩萬個y之後，我再格式化一次卡片
# mkfs.ext4 /dev/sdc1
然後再把Image檔寫進SD card裡（步驟如上故不再囉嗦）


還是待續…想到什麼就會補上來(噗）

