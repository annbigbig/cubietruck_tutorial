這篇文章記錄了
1.把Cubiuntu 1.11版的Image刷到MicroSD卡
2.將完成的MicroSD卡插入CubieTruck，開機後設定網路參數
3.打開音效，安裝必要軟體（繁體中文支援，中文輸入法，Oracle JDK 8)
4.把CubieTruck板子上閃來閃去的LED燈關掉



操作環境
製作MicroSD卡時需要：
一台安裝了Ubuntu 14.04 lts的筆記型電腦，請打開Synaptic套件管理員
將Gparted分割區管理程式安裝上去，以方便新增刪除分割區
還有為了調整MicroSD卡第一分割區裡的script.bin
需要sunxi-tools，代碼放在Github，請確定筆記型電腦裡也安裝了git-core
在終端機執行
git clone https://github.com/linux-sunxi/sunxi-tools
可以取得sunxi-tools
然後在終端機
# apt-get install libusb-1.0-0-dev
# cd sunxi-tools
# make
然後你在sunxi-tools目錄下，就會看到bin2fex及fex2bin兩個工具被編譯出來了
關於sunxi-tools的詳細說明你可以參考這裡
http://linux-sunxi.org/Sunxi-tools
本篇文章使用16GB的MicroSD卡



現在開始步驟1.把Cubiuntu 1.11版的Image刷到MicroSD卡
先去Cubieboard官網下載Image檔案
http://dl.cubieboard.org/cubiuntux/cubiuntuCT/cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip
你可以在終端機檢查它的md5sum正不正確
# md5sum cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip
然後解開它
# unzip cubiuntu_ct_1.11_sd_8bbb7ac7042646ab154afd771915a17e.img.zip 
你會得到待會兒我們要用來寫入MicroSD卡的影像檔
cubiuntu_ct_1.11_sd_062c9bc17099e1d7ceb80e341da7fd71.img

再來是u-boot
u-boot-sunxi-with-spl-ct-20140107.bin
一樣可以在Cubieboard官網上找到
http://dl.cubieboard.org/software/a20-cubietruck/lubuntu/ct-lubuntu-card0-v1.00/u-boot-sunxi-with-spl-ct-20140107.bin

現在我假設你把影像檔和u-boot檔都放到/tmp目錄中了
然後把MicroSD卡插到USB讀卡機上，然後再把讀卡機插上筆記型電腦
寫入MicroSD卡之前，我們必須先把MicroSD卡上的資料整個清除乾淨
請確認你的MicroSD卡的裝置代號，怎麼確認呢？
你可以打開Ubuntu的磁碟管理程式，在畫面最左上角那個「搜尋您的電腦和線上來源」輸入「disk」
就會跳出來「磁碟」，我的是/dev/sdc，有的時候是/dev/sdb
你一定要確定MicroSD卡使用的裝置代號，不然會發生無法預期的後果
（例如：dd指令把你筆記型電腦的開機硬碟洗乾淨了，別擔心，只要保持清醒並確認你的MicroSD卡的裝置代號，這種事就不會發生）

清除MicroSD卡，你可以用Gparted把上面原來有的分割區都刪除
或是用指令
# fdisk /dev/sdX
來刪除，注意那個/dev/sdX實際上在你的電腦可能是/dev/sdb或是/dev/sdc，我不知道，你必須就你的情況自行判斷，我的是/dev/sdc

刪除完之後，把MicroSD卡整個格式化成ext4
# mkfs.ext4 /dev/sdX

接下來為了工作方便，我們要設定4個環境變數
# card=/dev/sdc
# image=/tmp/cubiuntu_ct_1.11_sd_062c9bc17099e1d7ceb80e341da7fd71.img
# bootloader=/tmp/u-boot-sunxi-with-spl-ct-20140107.bin
# sunxi_tools_path=/home/anntony/CubieTruck_Download/sunxi-tools

現在執行下面的指令把MicroSD卡前面的地方清乾淨
# dd if=/dev/zero of=${card} bs=512 seek=1 count=2047

寫入bootloader
# dd if=$bootloader of=$card bs=1024 seek=8

接下來把Image寫入到MicroSD卡
# dd if=$image of=$card bs=1M
# sync

寫完之後別急著把卡插到CubieTruck裡，因為VGA的顯示參數還沒有改
我的LCD螢幕是23吋的，可以顯示到1920X1080，然後是15 pin的接頭，我沒有HDMI
剛寫完Image到卡片裡，筆電的Ubuntu的磁碟管理程式，還沒發現MicroSD卡已經被寫入了
所以你要手動把USB讀卡機拔起來，再插回筆電裡，Ubuntu才會知道MicroSD卡的最新狀態
重新再插一次USB讀卡機之後，可以發現Ubuntu查覺到了MicroSD卡的最新狀態
我們的MicroSD卡因為剛才的dd if=$image of=$card bs=1M 這條指令
被寫入了兩個分割區，第一個是16MB，第二個是3.9GB，然後後面整整12GB都沒有用到
記住你一定要把第二個分割區擴充到整張MicroSD卡的空間
我遇到一個情況，就是即使我輸入了正確的用戶名和密碼，卻仍是一直被LXDE桌面環境踢出來
就是因為第二個分割區的磁碟空間不夠使用
現在我們先調整一下第二個分割區的大小，再修正開機的VGA顯示參數

調整分割區的大小，基本上我是照著這篇教的
http://geekpeek.net/resize-filesystem-fdisk-resize2fs/

確定你的/dev/sdc1和/dev/sdc2是卸載的，然後執行指令
# fdisk $card
按下d (Enter) 2 (Enter) p (Enter) w (Enter)
來刪除第二個分割區（也就是3.9GB的那個待擴充的分割區，別怕，第二個分割區上面的資料不會不見）

再一次執行
# fdisk $card
按下n (Enter) p (Enter) 2 (Enter) p (Enter) w (Enter)
這個動作會把第二個分割區擴充到這張卡能負擔的極限

擴充前先檢查分割區
# e2fsck -f ${card}2

變大吧變大吧
# resize2fs ${card}2

現在你再到Ubuntu的磁碟管理程式裡，可以清楚看到第二個分割區從3.9GB變成16GB了，耶，爽啊
好的，現在我們要來修改VGA參數
# mkdir /tmp/sdc1
# mount /dev/sdc1 /tmp/sdc1
# cd /tmp/sdc1
# ls
# cp ./uEnv.ct ./uEnv.ct.default
# vi ./uEnv.ct

原來預設值是這樣
extraargs=disp.screen0_output_type=3 disp.screen0_output_mode=1280x720p60 consoleblank=0 cubietruck 
sunxi_ve_mem_reserve=128 
root=/dev/mmcblk0p2 rootwait 
partition=0:1
kernel=/uImage.3.4.79-sun7i+
script=script-ct.bin

請把它改成這樣
extraargs=disp.screen0_output_type=4 disp.screen0_output_mode=10 consoleblank=0 cubietruck 
sunxi_ve_mem_reserve=128 
root=/dev/mmcblk0p2 rootwait 
partition=0:1
kernel=/uImage.3.4.79-sun7i+
script=script-ct.bin

還有另一個檔案script-ct.bin也要改
# $sunxi_tools_path/bin2fex script-ct.bin 1.fex
# cat 1.fex |grep screen0

原來的值是這樣
screen0_output_type = 4
screen0_output_mode = 4

請改成這樣
screen0_output_type = 4
screen0_output_mode = 10

然後再把1.fex加工成script-ct.bin
# $sunxi_tools_path/fex2bin 1.fex script-ct.bin

同步一下，卸載，然後就大功告成
# sync
# umount /tmp/sdc1

現在就把MicroSD卡插到CubieTruck裡面，開機，準備要來接通網路
