objective 5 : 客製化aRuntu系統

到現在為止，我們在MicroSD卡上面的aRuntu 0.888作業系統，已經接上螢幕調整好解析度
然後有網路連線，不過它還不是我們熟悉的中文介面，系統時區也是西班牙馬德里，
還有一些我常用的套件也沒有安裝上
所以在objective 5，我再次細分為以下的幾個任務

　（零）調整MicroSD卡的分割區大小
　（一）中文環境，包括locale、timezone還有安裝中文輸入法
　（二）安裝git，然後把sunzi-tools的repo從github上拉下來編譯出bin2fex和fex2bin工具程式
　（三）偶爾可能還是會寫到Java代碼，所以要把Oracle JDK裝上，順便也裝上Netbeans IDE
　（四）還有LibreOffice和影像處理程式Gimp也裝上
　（五）修改CubieTruck的主機名稱 ( hostname )

==============================================================================================
（零）調整MicroSD卡的分割區大小 - Resize the partition size on my 16GB MicroSD card
==============================================================================================
CubieTruck開機之後，進入終端機，然後執行
aruntu@aruntu:~$ sudo -i
root@aruntu:~# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       3.6G  3.3G  100M  98% /
devtmpfs        888M  4.0K  888M   1% /dev
/dev/root       3.6G  3.3G  100M  98% /var/log.hdd
ramlog-tmpfs    984M   15M  969M   2% /var/log
none            4.0K     0  4.0K   0% /sys/fs/cgroup
tmpfs           984M  4.0K  984M   1% /tmp
none            197M  452K  197M   1% /run
tmpfs           984M     0  984M   0% /var/tmp
none            5.0M     0  5.0M   0% /run/lock
none            984M   72K  984M   1% /run/shm
none            100M  8.0K  100M   1% /run/user

啊啊啊靠腰這是怎樣，怎麼我的根目錄( / )總共只有3.6G，而且已經用掉98%，現在只剩100M的空間？
這是因為在我們把aRuntu的Image寫入MicroSD卡之後，我們沒有去調整分割區的大小
現在請先把CubieTruck關機，在終端機執行關機的指令
# init 0
然後把MicroSD記憶卡給取出，插上SD轉卡再插上筆記型電腦
我懶得再開圖形化的磁碟管理程式了，直接在終端機把分割區變大吧，進入終端機，然後如下操作

anntony@anntony-Lenovo-B590 ~ $ sudo -i
[sudo] password for anntony: 
anntony-Lenovo-B590 ~ # df -h
檔案系統        容量  已用  可用 已用% 掛載點
/dev/sda1       453G   91G  340G   22% /
none            4.0K     0  4.0K    0% /sys/fs/cgroup
udev            2.8G  4.0K  2.8G    1% /dev
tmpfs           559M  1.4M  558M    1% /run
none            5.0M     0  5.0M    0% /run/lock
none            2.8G   22M  2.8G    1% /run/shm
none            100M   44K  100M    1% /run/user
/dev/sdb1       3.5G  3.2G   84M   98% /media/anntony/5f70abf0-69bc-468e-b875-5cf1378b476b
anntony-Lenovo-B590 ~ # umount /dev/sdb1
anntony-Lenovo-B590 ~ # df -h
檔案系統        容量  已用  可用 已用% 掛載點
/dev/sda1       453G   91G  340G   22% /
none            4.0K     0  4.0K    0% /sys/fs/cgroup
udev            2.8G  4.0K  2.8G    1% /dev
tmpfs           559M  1.4M  558M    1% /run
none            5.0M     0  5.0M    0% /run/lock
none            2.8G   22M  2.8G    1% /run/shm
none            100M   44K  100M    1% /run/user
anntony-Lenovo-B590 ~ # fdisk /dev/sdb

命令 (m 以獲得說明)： m
命令動作
   a   切換可開機的旗標
   b   編輯 bsd 磁碟標籤
   c   切換 DOS 相容性旗標
   d   刪除分割區
   l   列出已知分割區類型
   m   印出這個選單
   n   加入新的分割區
   o   建立新的空白 DOS 分割表
   p   印出分割表
   q   離開而不需儲存變更
   s   建立新的空白 Sun 磁碟標籤
   t   變更分割區系統識別號
   u   變更顯示/輸入單位
   v   驗證分割表
   w   分割表寫入磁碟然後離開
   x   額外功能 (專家限用)

命令 (m 以獲得說明)： p

Disk /dev/sdb: 15.7 GB, 15720251392 bytes
67 磁頭，45 磁區/磁軌，10183 磁柱，總計 30703616 磁區
單位 = 磁區 之於 1 * 512 = 512 位元組
磁區大小 (邏輯/實體)：512 位元組 / 512 位元組
I/O 大小 (最小/最佳化)：512 位元組 / 512 位元組
磁碟識別碼：0x00062524

所用裝置 開機      開始         結束      區塊   識別號  系統
/dev/sdb1            2048     7538687     3768320   83  Linux

命令 (m 以獲得說明)： d
已選分割區 1

命令 (m 以獲得說明)： p

Disk /dev/sdb: 15.7 GB, 15720251392 bytes
67 磁頭，45 磁區/磁軌，10183 磁柱，總計 30703616 磁區
單位 = 磁區 之於 1 * 512 = 512 位元組
磁區大小 (邏輯/實體)：512 位元組 / 512 位元組
I/O 大小 (最小/最佳化)：512 位元組 / 512 位元組
磁碟識別碼：0x00062524

所用裝置 開機      開始         結束      區塊   識別號  系統

命令 (m 以獲得說明)： w
分割表已變更！

呼叫 ioctl() 以重新讀取分割表。
同步磁碟。
anntony-Lenovo-B590 ~ # fdisk /dev/sdb

命令 (m 以獲得說明)： p

Disk /dev/sdb: 15.7 GB, 15720251392 bytes
64 磁頭，32 磁區/磁軌，14992 磁柱，總計 30703616 磁區
單位 = 磁區 之於 1 * 512 = 512 位元組
磁區大小 (邏輯/實體)：512 位元組 / 512 位元組
I/O 大小 (最小/最佳化)：512 位元組 / 512 位元組
磁碟識別碼：0x00062524

所用裝置 開機      開始         結束      區塊   識別號  系統

命令 (m 以獲得說明)： n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): 
Using default response p
分割區編號 (1-4, 預設 1)： 1
起初 磁區 (2048-30703615, 預設 2048)：   
使用預設值 2048
最後 磁區, +磁區 或 +大小{K,M,G} (2048-30703615, 預設 30703615)： 15077374

命令 (m 以獲得說明)： p

Disk /dev/sdb: 15.7 GB, 15720251392 bytes
64 磁頭，32 磁區/磁軌，14992 磁柱，總計 30703616 磁區
單位 = 磁區 之於 1 * 512 = 512 位元組
磁區大小 (邏輯/實體)：512 位元組 / 512 位元組
I/O 大小 (最小/最佳化)：512 位元組 / 512 位元組
磁碟識別碼：0x00062524

所用裝置 開機      開始         結束      區塊   識別號  系統
/dev/sdb1            2048    15077374     7537663+  83  Linux

命令 (m 以獲得說明)： w
分割表已變更！

呼叫 ioctl() 以重新讀取分割表。
同步磁碟。
anntony-Lenovo-B590 ~ # e2fsck -f /dev/sdb1
e2fsck 1.42.9 (4-Feb-2014)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/sdb1: 177549/237568 files (0.2% non-contiguous), 869590/942079 blocks
anntony-Lenovo-B590 ~ # resize2fs /dev/sdb1
resize2fs 1.42.9 (4-Feb-2014)
Resizing the filesystem on /dev/sdb1 to 1884415 (4k) blocks.
The filesystem on /dev/sdb1 is now 1884415 blocks long.

anntony-Lenovo-B590 ~ # mkdir /tmp/testsdb1
anntony-Lenovo-B590 ~ # mount /dev/sdb1 /tmp/testsdb1
anntony-Lenovo-B590 ~ # df -h
檔案系統        容量  已用  可用 已用% 掛載點
/dev/sda1       453G   91G  340G   22% /
none            4.0K     0  4.0K    0% /sys/fs/cgroup
udev            2.8G  4.0K  2.8G    1% /dev
tmpfs           559M  1.4M  558M    1% /run
none            5.0M     0  5.0M    0% /run/lock
none            2.8G   22M  2.8G    1% /run/shm
none            100M   48K  100M    1% /run/user
/dev/sdb1       7.1G  3.2G  3.5G   49% /tmp/testsdb1
anntony-Lenovo-B590 ~ # cd /tmp/testsdb1/
anntony-Lenovo-B590 testsdb1 # ls
1.fex                       boot  home        media  proc  sbin                  srv  uEnv.cb2         usr
aRUNTU_TITAN_EDITION_0.888  dev   lib         mnt    root  script-ct.bin         sys  uEnv.ct          var
bin                         etc   lost+found  opt    run   script-cubie-A20.bin  tmp  uEnv.ct.default
anntony-Lenovo-B590 testsdb1 # cd -
/root
anntony-Lenovo-B590 ~ # umount /tmp/testsdb1
anntony-Lenovo-B590 ~ # 

這樣就把MicroSD卡上面的唯一的分割區（裝置代號/dev/sdb1）給變大了
本來調整前的大小，由df指令告訴我們的，可以看到只有3.5G，然後還用掉了98%
調整之後裝置代號一樣是/dev/sdb1，分割區大小變成了7.1G，已經用掉的百分比是49%
上面的終端機指令，先使用fdisk指令把分割區1刪除，然後再重新新建立一個大小約是兩倍大的分割區1
仔細注意調整前和調整後，開始的磁區都是2048，
也就是MicroSD卡最前面的0-2047個磁區，大小總共是1MB，都是保留給Partition Table使用的 （Booloader也寫在這個範圍內）
（0-2047共有2048個磁區，每個512 bytes，故2048 X 512bytes = 1048576 bytes = 1024 Kbytes = 1MB）
在調整前，/dev/sdb1結束的磁區是7538687，可以大概算出它的大小是
（7538687 - 2048）X 512 bytes = 3858759168 bytes = 3768319.5 Kbytes = 3679.99 Mb = 3.59 Gb）
然後我調整分割區，開始的磁區一樣是2048，但是結束的磁區我指定成15077374，這樣一來/dev/sdb1的大小就會是：
（15077374 - 2048）X 512 bytes = 7718566912 bytes = 7537663 Kbytes = 7360.99 Mb = 7.18 Gb）
然後再執行e2fsck -f /dev/sdb1檢查分割區，檢查完之後再執行resize2fs /dev/sdb1擴充分割區大小
現在任務（零）調整MicroSD卡的分割區大小已經完成
這裡值得一提的是，這張MicroSD卡明明就有16GB那麼大，為什麼我不把/dev/sdb1分割區給擴充到最大極限？
這是因為我在完成所有aRuntu客製化的軟體安裝及設定之後，我希望把這個我自已客製化的aRuntu給作成一個Image檔案，
而我不希望我在製作這個Image檔的時候，是用16GB那麼大的大小去作出這個Image檔的，以現在分割區/dev/sdb1的大小
就已經7.18G，那就表示如果我直接用dd指令把整張MicroSD卡的資料倒出來當成一整個影像檔，
我只要準備一個7.2G的空白檔案，如實記錄這張MicroSD卡上面的：
最前面1MB拿來當Partition Table的部分；還有唯一的分割區/dev/sdb1上面7.18G的資料就行了
如果我現在就把MicroSD卡的/dev/sdb1分割區擴充到它的最大極限16GB，那也沒有什麼不行
只是將來我作影像檔的時候，我的筆記型電腦的硬碟，就要喬出一個16GB的空間來給空白影像檔用，這樣很浪費
待會兒不管我怎麼裝軟體，應該都不會再安裝超過2GB的東西，所以把/dev/sdb1分割區放大到7.18GB，就已經很夠用了
漫長的解釋完畢了，現在把記憶卡插回去CubieTruck開機，我們要執行下一個任務

==============================================================================================
（一）中文環境，包括locale、timezone還有安裝中文輸入法
==============================================================================================
在安裝中文環境之前，我們先把aRuntu桌面環境裡的Synaptic套件管理員打開看一下
在Preferences -> Synaptic Package Manager
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055982295066515282?pid=6055982295066515282&oid=117546034720970496255

輸入aruntu用戶的密碼（預設是aruntu），然後我們進到了套件管理員，在上面Quick filter的地方輸入language-se
然後可以看到aRuntu已經預先安裝了language-selector-gnome 和language-selector-common套件
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055982294664027202?pid=6055982294664027202&oid=117546034720970496255

在aRuntu桌面環境裡正下方可以看到藍色的Language Support圖示，按下它
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055982294487952818?pid=6055982294487952818&oid=117546034720970496255

然後就出現了這個Language Support對話框，我們按下Install / Remove Languges ...
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055983758287552210?pid=6055983758287552210&oid=117546034720970496255

又跳出了一個Installed Languages的對話框，這裡我勾選了簡體中文Chinese (simplified)和繁體中文Chinese (traditional), 然後按下Apply Changes鈕
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055985040621404770?pid=6055985040621404770&oid=117546034720970496255


然後輸入密碼aruntu之後，按下Authenticate
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055991350932121458?pid=6055991350932121458&oid=117546034720970496255


下載中文語言套件，安裝中…要稍微耐心等一下
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055989364615458274?pid=6055989364615458274&oid=117546034720970496255


安裝完成了，可以看到列表中出現了漢語（中國）、漢語（香港）、漢語（台灣）
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055989361566215250?pid=6055989361566215250&oid=117546034720970496255


然後我把「漢語（台灣）」按著滑鼠左鍵然後往上拖拉到English的前面，讓它變成第一個選項
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055993115934339714?pid=6055993115934339714&oid=117546034720970496255

然後我按下了Apply System-Wide
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055994086395315858?pid=6055994086395315858&oid=117546034720970496255

然後又要我輸入一次密碼aruntu
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055994970054527362?pid=6055994970054527362&oid=117546034720970496255

等很久，然後都沒有反應，該不會是當掉了吧？受不了的我只好選擇按下右上角的叉叉來關掉這個對話框
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6055996741190993202?pid=6055996741190993202&oid=117546034720970496255

關掉之後，先把CubieTruck重新開機，看看有沒有改成繁體中文介面？
執行終端機指令
# init 6

重新開機的結果，並沒有如預期的進入繁體中文介面，我想可能是剛才真的當了，沒有變更到設定
所以我又在重新開機後，再一次把剛才的語言支持對話框，再一次按下了Apply System-Wide按鈕，
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056000654863096082?pid=6056000654863096082&oid=117546034720970496255


接著它沒有當機，很正常兩三秒就又跳回可以按Close按鈕的狀態了，這一次我再一次重新開機
# init 6

重新開機後，發現跳出了這個對話框「要將標準資料夾更新為目前的語言嗎？」看到了熟悉的繁體中文真TM的感動
勾選「不要再問我」之後，我選擇了「保留舊名稱」，
因為在終端機下指令切換目錄的時候，還是英文的目錄名稱比較好用
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056000658045967330?pid=6056000658045967330&oid=117546034720970496255


哦哦然後看看我的桌面環境，繁體中文，超感動
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056003350120515426?pid=6056003350120515426&oid=117546034720970496255


回到語言支援的對話框，原來在桌面正下方語言支持的小圖示被iBus的圖示佔去位置了，所以…
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056235836339648770?pid=6056235836339648770&oid=117546034720970496255


你必須到「偏好設定」-> 「語言支援」去打開「語言支援」的對話框
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056236771779654642?pid=6056236771779654642&oid=117546034720970496255


按下對話框上面的「區域格式」（我用紅筆圈起來的地方）
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056237607923171426?pid=6056237607923171426&oid=117546034720970496255


原來是「English (United States)」的地方
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056238728043126946?pid=6056238728043126946&oid=117546034720970496255


把它換成「漢語（臺灣）」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056239576620225858?pid=6056239576620225858&oid=117546034720970496255


然後按下「套用到全系統」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056240406493592498?pid=6056240406493592498&oid=117546034720970496255


然後又要輸入一次密碼aruntu，輸入完畢後按下「核對」鈕
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056241180918702546?pid=6056241180918702546&oid=117546034720970496255


糟糕，好像又當掉了，只好按下右上角的X來關掉這個對話框，然後我重新啟動了CubieTruck，先看看剛才的設定到底有沒有生效
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056241720129717026?pid=6056241720129717026&oid=117546034720970496255


然後重新開機之後，我又把語言支持的對話框叫了出來，一樣選「區域格式」那一頁，在「漢語（臺灣）」下面的「套用到全系統」用力按了下去，
這次沒事，看起來正常了，那麼就按下右下角的「關閉」鈕
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056242982554174178?pid=6056242982554174178&oid=117546034720970496255


完成了可是桌面右下角時間卻是六個小時之前，那是因為現在的時區是西班牙馬德里
為什麼我會知道呢？那是因為我在終端機執行了
aruntu@aruntu:~$ cat /etc/timezone 
Europe/Madrid

所以請打開「偏好設定 -> 日期及時間設定」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056244201324426786?pid=6056244201324426786&oid=117546034720970496255

然後在跳出的「日期及時間設定」對話框，按下「Unlock」解鎖
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056248512222102370?pid=6056248512222102370&oid=117546034720970496255

然後又要輸入aruntu密碼，然後按下「核對」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056249584442657746?pid=6056249584442657746&oid=117546034720970496255

在另一個跳出來的對話框，選擇Asia/Taipei，按下「關閉」鈕
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056250211532799650?pid=6056250211532799650&oid=117546034720970496255

回到「日期及時間設定」對話框，在這裡的「手動」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056251259032064066?pid=6056251259032064066&oid=117546034720970496255

拉下來，選擇「與網路伺服器保持同步」，按下去之後…
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056251729410525410?pid=6056251729410525410&oid=117546034720970496255

會跳一個對話框出來靠腰說「沒有安裝NTP支援」，那就安裝啊，按下「Install NTP support」
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056252199684540242?pid=6056252199684540242&oid=117546034720970496255

結果告訴我Could not install package，羚羊七百卡好哩
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056252871898183394?pid=6056252871898183394&oid=117546034720970496255

NTP套件待會兒我再開Synaptic套件管理員手動裝上，先處理這裡的事，在「日期及時間設定」對話框按下「關閉」鈕
https://plus.google.com/photos/117546034720970496255/albums/6055982289683005713/6056254009548582514?pid=6056254009548582514&oid=117546034720970496255

現在已經有中文環境，然後時區也調整到Asia/Taipei了，可是沒有NTP網路校時讓我覺得不是很完美，所以打開Synaptic套件管理員
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056347199773141906?pid=6056347199773141906&oid=117546034720970496255

還是要輸入密碼aruntu，輸入完按下「核對」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056348201300798066?pid=6056348201300798066&oid=117546034720970496255

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

在上面的「快速過濾」輸入ntp，然後下面出現了這些套件，選擇ntpdate
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056349117466193170?pid=6056349117466193170&oid=117546034720970496255

請把ntpdate套件標記為「安裝」
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056362917543003010?pid=6056362917543003010&oid=117546034720970496255

套件管理員會和你說，安裝ntpdate套件還會再安裝這些依賴套件，請按「標記」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056364312447414034?pid=6056364312447414034&oid=117546034720970496255

按下套件管理員上面的「套用」按鈕，準備安裝剛才選取的套件
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056365295851076658?pid=6056365295851076658&oid=117546034720970496255

套用以下的變更？是的，按下「套用」
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056366246723532946?pid=6056366246723532946&oid=117546034720970496255

安裝中，請稍候一下…
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056366910205460066?pid=6056366910205460066&oid=117546034720970496255

安裝完成，可以關閉套件管理員了
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056365295851076658?pid=6056365295851076658&oid=117546034720970496255

然後我再打開「偏好設定」-> 「日期及時間設定」
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056369796432184722?pid=6056369796432184722&oid=117546034720970496255

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

然後和剛才一樣，按下Unlock鈕，輸入密碼aruntu，我又試著要再把那個「手動」給調整成「與網路伺服器保持同步」的時候
又出現了「沒有安裝NTP支援」的對話框，我一樣選了「Install NTP Support」
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056379209396677954?pid=6056379209396677954&oid=117546034720970496255

然後一樣的跳出來「Could not install package」，然後我一樣按下「關閉」
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056380030138663202?pid=6056380030138663202&oid=117546034720970496255

我再一次仔細看了「沒有安裝NTP支援」，也就是前前一張我剛擷取下來的照片，我仔細看了對話框下方的文字寫著
「請在系統安裝並啟用NTP支援，令您的本地時間伺服器能與網路時間伺服器進行同步。」
本地時間伺服器？本地時間伺服器？本地時間伺服器？
所以我在想，我剛才安裝的套件是ntpdate，我有在Synaptic套件管理員裡，看ntpdate套件下面的英文注解
它是寫著
client for setting system time from NTP servers

NTP, the Network Time Protocol, is used to keep computer clocks
accurate by synchronizing them over the Internet or a local network,
or by following an accurate hardware receiver that interprets GPS,
DCF-77, NIST or similar time signals.

ntpdate is a simple NTP client that sets a system's clock to match
the time obtained by communicating with one or more NTP servers.  It
is not sufficient, however, for maintaining an accurate clock in the
long run.  ntpdate by itself is useful for occasionally setting the
time on machines that do not have full-time network access, such as
laptops.

臭基巴毛我應該是沒裝錯，我裝的是ntp client難道也臭了嗎？
呃…好像真的錯了，因為我又在Ask Ubuntu找到一篇文章

文章出處：
http://askubuntu.com/questions/391089/how-to-change-the-time-server-in-ubuntu-12-04-lts-without-installing-the-ntp-p

其中一個重要的回答是
There are two main ways to set the current time via NTP: ntpdate is a command-line tool that, when run, fetches the current time from an NTP server and sets the system time accordingly. ntpd is the NTP daemon which runs in the background and continuously adjusts the time slightly.

For servers, production environments and such, ntpd is better. However, for normal desktop PCs and end users, ntpdate is perfectly fine. In fact, when you install Ubuntu Desktop, it comes with ntpdate preinstalled, but not ntpd.

When you select "Automatically from the Internet" in your Ubuntu system settings as shown in your screenshot above, what happens is that at each boot Ubuntu will fetch the current time using ntpdate from ntp.ubuntu.com. If you want to change that server, you can edit the file /etc/default/ntpdate. Note that you will have to also set NTPDATE_USE_NTP_CONF to no.

The alternative is to install ntpd (in package ntp), and configure that via /etc/ntp.conf. This is explained here in more detail:

https://help.ubuntu.com/12.10/serverguide/NTP.html

However, if you do not want to install any additional packages and simply change the default server for ntpdate which comes pre-installed with Ubuntu, the first solution is the way to go.

所以看完這個回答，我可以用我拙劣的英文為大家翻譯一下，上面的英文答案說道：
有兩種透過NTP來設定目前時間的主要方法，ntpdate是從NTP服務器拉時間然後更新系統時間的命令列工具程式，
而ntpd是於系統背景裡持續略微修正系統時間的NTP服務
因為翻譯很累，所以後面的我懶得翻了
總之如果是一般用戶的工作機，不是用來當服務器的Ubuntu機器，一般裝上ntpdate工具程式，
然後每次開機的時候讓Ubuntu自動去從ntp.ubuntu.com自動去抓時間下來更新，就很夠用了
上面還講到當你安裝Ubuntu Desktop版本的時候，ntpdate都是預先安裝好的
（但是aRuntu真的沒有，還要我手動去synaptic套件管理員去選上來安裝）

然後我試著執行了一下
# ntpdate ntp.ubuntu.com
然後結果會輸出
 8 Sep 03:31:48 ntpdate[5134]: adjust time server 91.189.89.199 offset 0.158540 sec
嗯，真的有去NTP服務器抓時間下來校正

注意前方的提示符是root身分用的#，我是用root身分才可以執行ntpdate去抓NTP服務器上面的時間

接著什麼也沒作就重新開機了，
我剛才看了一下/var/log/syslog裡的內容
root@aruntu:/var/log# cat /var/log/syslog | grep ntp
Sep  8 11:22:14 aruntu ntpdate[617]: Can't find host ntp.ubuntu.com: Name or service not known (-2)
Sep  8 11:22:14 aruntu ntpdate[617]: no servers can be used, exiting
Sep  8 11:22:45 aruntu ntpdate[1290]: step time server 91.189.89.199 offset 10.569016 sec
Sep  8 11:23:02 aruntu ntpdate[1633]: adjust time server 91.189.89.199 offset 0.000325 sec

有的，確實在開機的時候已經有執行ntpdate指令來校時了，
我在想，除了每次開機的時候，如果每一個小時也可以執行一次ntpdate來校時，這樣不是很妥當嗎？
於是可以參考這一篇

https://help.ubuntu.com/10.04/serverguide/NTP.html

（我是用ubuntu cron hourly ntpdate四個關鍵字搜出來的）
參考上面那篇文篇，依樣畫葫蘆，進入終端機執行

aruntu@aruntu:~$ sudo -i
root@aruntu:~# cd /etc
root@aruntu:/etc# ls -al |grep cron
-rw-r--r--   1 root             root        401 12月 20  2012 anacrontab
drwxr-xr-x   2 root             root       4096  6月 29 19:09 cron.d
drwxr-xr-x   2 root             root       4096  6月 29 19:40 cron.daily
drwxr-xr-x   2 root             root       4096  6月 29 07:49 cron.hourly
drwxr-xr-x   2 root             root       4096  6月 29 08:50 cron.monthly
-rw-r--r--   1 root             root        722  2月  9  2013 crontab
drwxr-xr-x   2 root             root       4096  6月 29 08:50 cron.weekly
root@aruntu:/etc# cd /etc/cron.hourly/
root@aruntu:/etc/cron.hourly# ls
root@aruntu:/etc/cron.hourly# echo "ntpdate ntp.ubuntu.com" >> ./ntpdate
root@aruntu:/etc/cron.hourly# chmod 755 /etc/cron.hourly/ntpdate
root@aruntu:/etc/cron.hourly# ls -al
總計 24
drwxr-xr-x   2 root root  4096  9月  8 13:34 .
drwxr-xr-x 161 root root 12288  9月  8 11:22 ..
-rwxr-xr-x   1 root root    23  9月  8 13:34 ntpdate
-rw-r--r--   1 root root   102  2月  9  2013 .placeholder
root@aruntu:/etc/cron.hourly# cat /etc/cron.hourly/ntpdate 
ntpdate ntp.ubuntu.com

然後我又重新啟動了一次cron
root@aruntu:/etc/cron.hourly# /etc/init.d/cron restart
Rather than invoking init scripts through /etc/init.d, use the service(8)
utility, e.g. service cron restart

Since the script you are attempting to invoke has been converted to an
Upstart job, you may also use the stop(8) and then start(8) utilities,
e.g. stop cron ; start cron. The restart(8) utility is also available.
cron stop/waiting
cron start/running, process 2620
root@aruntu:/etc/cron.hourly# which service
/usr/sbin/service
root@aruntu:/etc/cron.hourly# service cron restart
cron stop/waiting
cron start/running, process 2643
root@aruntu:/etc/cron.hourly# 

（直接把CubieTruck重新開機，不用上面的service cron restart指令應該也可以吧）

這樣關於系統時間的部分就完成了，由於CubieTruck不是個人電腦，主機板上面沒有CMOS電池
所以NTP網路校時很重要，如果沒有設定的話，系統時間會不正確

剛才還記得上面有個地方我想要把「手動」調整成「與網路伺服器保持同步」嗎？
然後只要一調整成「與網路伺服器保持同步」就會跳一個對話框出來靠腰說「沒有安裝NTP支援」
那裡不用再去管它了，在/var/log/syslog這裡我已經確定它每次開機的時候都會自已去執行ntpdate指令，
然後去ntp.ubuntu.com抓正確時間來調整本機的系統時間，
而且我還在/etc/cron.hourly/ntpdate寫了一個指令讓它每小時都自動校時
這樣就夠了，不用再去管剛才那裡為什麼不能選「與網路伺服器保持同步」

接著要來安裝中文輸入法，請打開Synaptic套件管理員
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289

輸入密碼aruntu，按下「核對」的圖片我就不抓了，因為很累，直接來到Synaptic套件管理員
在「快速過濾」的地方輸入「ibus」，然後在左邊的地方選「已安裝」，就會出現這個畫面，aRuntu已經安裝上一堆ibus相關的套件了
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056588538043766178?pid=6056588538043766178&oid=117546034720970496255

在「偏好設定」-> 「語言支援」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056590454963782818?pid=6056590454963782818&oid=117546034720970496255

把鍵盤輸入法系統從「預設」改為「IBus」，然後按下「關閉」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056591384382606706?pid=6056591384382606706&oid=117546034720970496255

然後在「偏好設定」->「鍵盤輸入法」的地方
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056592398395083698?pid=6056592398395083698&oid=117546034720970496255

在「下一個輸入法」的地方按下「…」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056593156912959874?pid=6056593156912959874&oid=117546034720970496255

把預設的用來切換中英文輸入法的組合鍵「Super<Space>」給刪掉
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056593596043153586?pid=6056593596043153586&oid=117546034720970496255

勾選「Control」然後按鍵碼保留預設的「Space」然後按「加入」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056594487805515730?pid=6056594487805515730&oid=117546034720970496255

然後按下「確定」關閉對話框
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056594886153194338?pid=6056594886153194338&oid=117546034720970496255

在對話框上方選擇「輸入法」，可以看到我現在有「漢語-Chewing」和「英語-English(US)」兩種輸入法可以切換，按下右下角的「關閉」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056595493793503074?pid=6056595493793503074&oid=117546034720970496255

然後打開「附屬應用程式-> Leafpad」，現在你可以用Control鍵加上空白鍵來切換中英文輸入法了
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056596509248618722?pid=6056596509248618722&oid=117546034720970496255

再一次「偏好設定」-> 「鍵盤輸入法」，如果你覺得只有注音和英文不夠用，其實這裡還有倉頡第三代、倉頡第五代、海峰、速成…
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056598124448808082?pid=6056598124448808082&oid=117546034720970496255

如果我要再加一個倉頡第五代輸入法，我就選它，然後按下「加入」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056600257215191906?pid=6056600257215191906&oid=117546034720970496255

加入倉頡第五代輸入法之後，選擇「關閉」
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056600871851947746?pid=6056600871851947746&oid=117546034720970496255

這樣我在按Control加空白鍵的時候就有三個輸入法（注音、倉頡、英文可以選）
https://plus.google.com/photos/117546034720970496255/albums/6056587332228632289/6056601317664893666?pid=6056601317664893666&oid=117546034720970496255

如果你常用的中文輸入法沒有在上面
你可以自已Google搜尋「ubuntu ibus 你常用的中文輸入法名稱」
然後會有很多的教學頁面出來
大致上就是安裝套件後，再把ibus重新啟動，然後在上面這個地方再把漢語輸入法加入
順便一提，在終端機安裝deb包的指令是
# dpkg -i your_deb_file_name.deb


弄到想哭，超漫長的過程，aRuntu終於有了繁體中文操作介面，Asia/Taipei時區，網路NTP校時，還有ibus中文輸入
接下來要來完成下一個任務

==============================================================================================
（二）安裝git，然後把sunzi-tools的repo從github上拉下來編譯出bin2fex和fex2bin工具程式
==============================================================================================

一直擷圖超累的，乾脆都用終端機好了，這樣我就直接把終端機的輸出訊息複製貼上就好了，耶～懶鬼萬歲
aruntu@aruntu:~$ pwd
/home/aruntu
aruntu@aruntu:~$ sudo -i
root@aruntu:~# apt-get install libusb-1.0-0-dev
正在讀取套件清單... 完成
正在重建相依關係          
正在讀取狀態資料... 完成
下列的額外套件將被安裝：
  libusb-1.0-doc
下列【新】套件將會被安裝：
  libusb-1.0-0-dev libusb-1.0-doc
升級 0 個，新安裝 2 個，移除 0 個，有 27 個未被升級。
需要下載 157 kB 的套件檔。
此操作完成之後，會多佔用 1,312 kB 的磁碟空間。
是否繼續進行 [Y/n]？y
下載:1 http://ports.ubuntu.com/ubuntu-ports/ saucy/main libusb-1.0-0-dev armhf 2:1.0.16-3 [50.1 kB]
下載:2 http://ports.ubuntu.com/ubuntu-ports/ saucy/main libusb-1.0-doc all 2:1.0.16-3 [107 kB]
取得 157 kB 用了 2秒 (54.2 kB/s)         
選取了原先未選的套件 libusb-1.0-0-dev:armhf。
（讀取資料庫 ... 目前共安裝了 161845 個檔案和目錄。）
解開 libusb-1.0-0-dev:armhf（從 .../libusb-1.0-0-dev_2%3a1.0.16-3_armhf.deb）...
選取了原先未選的套件 libusb-1.0-doc。
解開 libusb-1.0-doc（從 .../libusb-1.0-doc_2%3a1.0.16-3_all.deb）...
執行 doc-base 的觸發程式 ...
Processing 1 added doc-base file...
Registering documents with scrollkeeper...
設定 libusb-1.0-0-dev:armhf (2:1.0.16-3) ...
設定 libusb-1.0-doc (2:1.0.16-3) ...
root@aruntu:~# apt-get install git
正在讀取套件清單... 完成
正在重建相依關係          
正在讀取狀態資料... 完成
git 已經是最新版本了。
升級 0 個，新安裝 0 個，移除 0 個，有 27 個未被升級。
root@aruntu:~# git --version
git version 1.8.3.2
root@aruntu:~# pwd
/root
root@aruntu:~# git clone https://github.com/linux-sunxi/sunxi-tools
Cloning into 'sunxi-tools'...
remote: Counting objects: 1066, done.
remote: Compressing objects: 100% (21/21), done.
remote: Total 1066 (delta 12), reused 0 (delta 0)
Receiving objects: 100% (1066/1066), 369.00 KiB | 107.00 KiB/s, done.
Resolving deltas: 100% (568/568), done.
Checking connectivity... done
root@aruntu:~# ls
Desktop  Documents  Downloads  Music  nano.save  Pictures  Public  sunxi-tools  syslog.2  Templates  Videos
root@aruntu:~# cd sunxi-tools/
root@aruntu:~/sunxi-tools# ls
adb-devprobe.sh  bootinfo.c  fel-copy.c   fel-sdboot.c    include        Makefile         nand-part-a20.h   pio.c         script.c      script_uboot.c
bin              common.h    fel-gpio     fel-sdboot.lds  jtag-loop.c    meminfo.c        nand-part.c       README        script_fex.c  script_uboot.h
boot_head.lds    COPYING     fel-pio.c    fexc.c          jtag-loop.lds  nand-common.h    nand-part-main.c  script_bin.c  script_fex.h  usb-boot
boot_head.S      fel.c       fel-pio.lds  fexc.h          jtag-loop.S    nand-part-a10.h  phoenix_info.c    script_bin.h  script.h
root@aruntu:~/sunxi-tools# make
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/  -o fexc fexc.c script.c script_uboot.c script_bin.c script_fex.c 
ln -s fexc bin2fex
ln -s fexc fex2bin
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/  -o bootinfo bootinfo.c 
bootinfo.c: In function ‘print_script’:
bootinfo.c:274:25: warning: unused parameter ‘script’ [-Wunused-parameter]
 void print_script(void *script)
                         ^
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/ `pkg-config --cflags libusb-1.0`  -o fel fel.c  `pkg-config --libs libusb-1.0`
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/  -o pio pio.c 
pio.c: In function ‘do_command’:
pio.c:316:57: warning: unused parameter ‘argc’ [-Wunused-parameter]
 static int do_command(char *buf, const char **args, int argc)
                                                         ^
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/ -c -o nand-part-main.o nand-part-main.c
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/ -c -o nand-part-a10.o nand-part.c -D A10
gcc -g -O0 -Wall -Wextra -std=c99 -D_POSIX_C_SOURCE=200112L -Iinclude/ -c -o nand-part-a20.o nand-part.c -D A20
gcc  -o nand-part nand-part-main.o nand-part-a10.o nand-part-a20.o 
root@aruntu:~/sunxi-tools# ls
adb-devprobe.sh  bootinfo    fel.c        fel-sdboot.c    fexc.h         Makefile         nand-part-a10.o   nand-part-main.o  script_bin.c  script.h
bin              bootinfo.c  fel-copy.c   fel-sdboot.lds  include        meminfo.c        nand-part-a20.h   phoenix_info.c    script_bin.h  script_uboot.c
bin2fex          common.h    fel-gpio     fex2bin         jtag-loop.c    nand-common.h    nand-part-a20.o   pio               script.c      script_uboot.h
boot_head.lds    COPYING     fel-pio.c    fexc            jtag-loop.lds  nand-part        nand-part.c       pio.c             script_fex.c  usb-boot
boot_head.S      fel         fel-pio.lds  fexc.c          jtag-loop.S    nand-part-a10.h  nand-part-main.c  README            script_fex.h
root@aruntu:~/sunxi-tools# 

完成，直接看終端機輸出就知道我作了些什麼，無需解釋
現在來進行下一個任務
==============================================================================================
　（三）偶爾可能還是會寫到Java代碼，所以要把Oracle JDK裝上，順便也裝上Netbeans IDE
==============================================================================================
參考了這篇來作JDK的安裝
http://www.wikihow.com/Install-Oracle-Java-JDK-on-Ubuntu-Linux

首先去Oracle官網抓JDK8的arm版本
我TM真的被wget和curl指令惹毛了
只要我在終端機執行
# wget http://download.oracle.com/otn-pub/java/jdk/8u6-b23/jdk-8u6-linux-arm-vfp-hflt.tar.gz
那麼抓下來的jdk-8u6-linux-arm-vfp-hflt.tar.gz永遠都只會有5307 Bytes那麼小
如果我執行
# curl -O http://download.oracle.com/otn-pub/java/jdk/8u6-b23/jdk-8u6-linux-arm-vfp-hflt.tar.gz
就會得到
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
那麼下載永遠不會開始，煩死了，我只好直接在aRuntu開瀏覽器去Oracle官網下載
這樣讓我感覺很不爽很LOW，我真的不知道為什麼這兩個那麼簡單的指令不能使用，我也不想管

記得下載的是JDK8的Arm版本，官網載點如圖
https://plus.google.com/photos/117546034720970496255/albums/6056347191996684577/6056736695414647666?pid=6056736695414647666&oid=117546034720970496255

進入aRuntu的終端機，開始安裝JDK了
aruntu@aruntu:~$ sudo -i
root@aruntu:~# apt-get purge openjdk-\*
正在讀取套件清單... 完成
正在重建相依關係          
正在讀取狀態資料... 完成
注意，為 openjdk-* regex 選取 openjdk-7-jre
注意，為 openjdk-* regex 選取 openjdk-6-jre-headless
注意，為 openjdk-* regex 選取 openjdk-jre
注意，為 openjdk-* regex 選取 uwsgi-plugin-jvm-openjdk-6
注意，為 openjdk-* regex 選取 uwsgi-plugin-jvm-openjdk-7
注意，為 openjdk-* regex 選取 openjdk-7
注意，為 openjdk-* regex 選取 openjdk-7-doc
注意，為 openjdk-* regex 選取 openjdk-7-jre-lib
注意，為 openjdk-* regex 選取 openjdk-7-jre-headless
注意，為 openjdk-* regex 選取 openjdk-7-demo
注意，為 openjdk-* regex 選取 openjdk-7-source
注意，為 openjdk-* regex 選取 openjdk-6-demo
注意，為 openjdk-* regex 選取 uwsgi-plugin-jwsgi-openjdk-6
注意，為 openjdk-* regex 選取 uwsgi-plugin-jwsgi-openjdk-7
注意，為 openjdk-* regex 選取 openjdk-6-jdk
注意，為 openjdk-* regex 選取 openjdk-7-jre-zero
注意，為 openjdk-* regex 選取 openjdk-6-jre-zero
注意，為 openjdk-* regex 選取 openjdk-6-dbg
注意，為 openjdk-* regex 選取 openjdk-7-jdk
注意，為 openjdk-* regex 選取 openjdk-6-jre-lib
注意，為 openjdk-* regex 選取 openjdk-6-source
注意，為 openjdk-* regex 選取 openjdk-6-jre
注意，為 openjdk-* regex 選取 openjdk-7-dbg
注意，為 openjdk-* regex 選取 openjdk-6-doc
注意，選取 openjdk-7-jre-headless 而非 openjdk-7-jre-zero
Package 'openjdk-7' is not installed, so not removed
注意，選取 openjdk-6-jre-headless 而非 openjdk-6-jre-zero
Package 'openjdk-jre' is not installed, so not removed
Package 'uwsgi-plugin-jvm-openjdk-6' is not installed, so not removed
Package 'uwsgi-plugin-jvm-openjdk-7' is not installed, so not removed
Package 'uwsgi-plugin-jwsgi-openjdk-6' is not installed, so not removed
Package 'uwsgi-plugin-jwsgi-openjdk-7' is not installed, so not removed
Package 'openjdk-7-dbg' is not installed, so not removed
Package 'openjdk-7-demo' is not installed, so not removed
Package 'openjdk-7-doc' is not installed, so not removed
Package 'openjdk-7-jdk' is not installed, so not removed
Package 'openjdk-7-jre-lib' is not installed, so not removed
Package 'openjdk-7-source' is not installed, so not removed
Package 'openjdk-6-dbg' is not installed, so not removed
Package 'openjdk-6-demo' is not installed, so not removed
Package 'openjdk-6-doc' is not installed, so not removed
Package 'openjdk-6-jdk' is not installed, so not removed
Package 'openjdk-6-jre' is not installed, so not removed
Package 'openjdk-6-jre-headless' is not installed, so not removed
Package 'openjdk-6-jre-lib' is not installed, so not removed
Package 'openjdk-6-source' is not installed, so not removed
下列套件將會被【移除】：
  ca-certificates-java* default-jre* default-jre-headless* icedtea-7-jre-jamvm* libatk-wrapper-java* libatk-wrapper-java-jni* openjdk-7-jre*
  openjdk-7-jre-headless*
升級 0 個，新安裝 0 個，移除 8 個，有 27 個未被升級。
此操作完成之後，會空出 48.2 MB 的磁碟空間。
是否繼續進行 [Y/n]？y
（讀取資料庫 ... 目前共安裝了 161934 個檔案和目錄。）
移除 default-jre ...
移除 icedtea-7-jre-jamvm:armhf ...
移除 default-jre-headless ...
移除 libatk-wrapper-java-jni:armhf ...
清除 libatk-wrapper-java-jni:armhf 的設定檔 ...
移除 ca-certificates-java ...
清除 ca-certificates-java 的設定檔 ...
移除 libatk-wrapper-java ...
移除 openjdk-7-jre:armhf ...
移除 openjdk-7-jre-headless:armhf ...
update-alternatives: 警告: 找不到 java 連結群組的替換項目 /usr/local/jdk/bin/java 的替換項目；由替換清單中移除
清除 openjdk-7-jre-headless:armhf 的設定檔 ...
執行 libc-bin 的觸發程式 ...
執行 ca-certificates 的觸發程式 ...
Updating certificates in /etc/ssl/certs... 0 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d....done.
執行 bamfdaemon 的觸發程式 ...
Rebuilding /usr/share/applications/bamf-2.index...
執行 gnome-menus 的觸發程式 ...
執行 desktop-file-utils 的觸發程式 ...
執行 mime-support 的觸發程式 ...
執行 hicolor-icon-theme 的觸發程式 ...
root@aruntu:~# cp /home/aruntu/Downloads/jdk-8u6-linux-arm-vfp-hflt.tar.gz /usr/local
root@aruntu:~# cd /uar/local
-bash: cd: /uar/local: 沒有此一檔案或目錄
root@aruntu:~# cd /usr/local
root@aruntu:/usr/local# ls
bin  etc  games  include  jdk-8u6-linux-arm-vfp-hflt.tar.gz  lib  man  sbin  share  src
root@aruntu:/usr/local# tar zxvf jdk-8u6-linux-arm-vfp-hflt.tar.gz 
jdk1.8.0_06/COPYRIGHT
jdk1.8.0_06/LICENSE
jdk1.8.0_06/README.html
jdk1.8.0_06/THIRDPARTYLICENSEREADME-JAVAFX.txt
jdk1.8.0_06/THIRDPARTYLICENSEREADME.txt
jdk1.8.0_06/bin/
jdk1.8.0_06/bin/javah
jdk1.8.0_06/bin/appletviewer
jdk1.8.0_06/bin/extcheck
jdk1.8.0_06/bin/jps
jdk1.8.0_06/bin/wsimport
jdk1.8.0_06/bin/unpack200
jdk1.8.0_06/bin/jarsigner
jdk1.8.0_06/bin/jdb
jdk1.8.0_06/bin/policytool
jdk1.8.0_06/bin/pack200
jdk1.8.0_06/bin/xjc
jdk1.8.0_06/bin/native2ascii
jdk1.8.0_06/bin/orbd
jdk1.8.0_06/bin/jdeps
jdk1.8.0_06/bin/jinfo
jdk1.8.0_06/bin/rmic
jdk1.8.0_06/bin/idlj
jdk1.8.0_06/bin/tnameserv
jdk1.8.0_06/bin/rmiregistry
jdk1.8.0_06/bin/java-rmi.cgi
jdk1.8.0_06/bin/rmid
jdk1.8.0_06/bin/jhat
jdk1.8.0_06/bin/keytool
jdk1.8.0_06/bin/jstack
jdk1.8.0_06/bin/javap
jdk1.8.0_06/bin/wsgen
jdk1.8.0_06/bin/java
jdk1.8.0_06/bin/jjs
jdk1.8.0_06/bin/serialver
jdk1.8.0_06/bin/jstatd
jdk1.8.0_06/bin/jconsole
jdk1.8.0_06/bin/javac
jdk1.8.0_06/bin/schemagen
jdk1.8.0_06/bin/servertool
jdk1.8.0_06/bin/jsadebugd
jdk1.8.0_06/bin/jar
jdk1.8.0_06/bin/jmap
jdk1.8.0_06/bin/javadoc
jdk1.8.0_06/bin/jrunscript
jdk1.8.0_06/bin/jcmd
jdk1.8.0_06/bin/jstat
jdk1.8.0_06/db/
jdk1.8.0_06/db/RELEASE-NOTES.html
jdk1.8.0_06/db/3RDPARTY
jdk1.8.0_06/db/README-JDK.html
jdk1.8.0_06/db/LICENSE
jdk1.8.0_06/db/lib/
jdk1.8.0_06/db/lib/derbyLocale_zh_CN.jar
jdk1.8.0_06/db/lib/derbyLocale_it.jar
jdk1.8.0_06/db/lib/derbyLocale_zh_TW.jar
jdk1.8.0_06/db/lib/derbynet.jar
jdk1.8.0_06/db/lib/derbyLocale_hu.jar
jdk1.8.0_06/db/lib/derbyLocale_es.jar
jdk1.8.0_06/db/lib/derbyLocale_fr.jar
jdk1.8.0_06/db/lib/derby.jar
jdk1.8.0_06/db/lib/derbyLocale_cs.jar
jdk1.8.0_06/db/lib/derbyLocale_pl.jar
jdk1.8.0_06/db/lib/derbyLocale_ja_JP.jar
jdk1.8.0_06/db/lib/derbyclient.jar
jdk1.8.0_06/db/lib/derbytools.jar
jdk1.8.0_06/db/lib/derbyLocale_ru.jar
jdk1.8.0_06/db/lib/derbyrun.jar
jdk1.8.0_06/db/lib/derbyLocale_de_DE.jar
jdk1.8.0_06/db/lib/derbyLocale_pt_BR.jar
jdk1.8.0_06/db/lib/derby.war
jdk1.8.0_06/db/lib/derbyLocale_ko_KR.jar
jdk1.8.0_06/db/NOTICE
jdk1.8.0_06/db/bin/
jdk1.8.0_06/db/bin/ij.bat
jdk1.8.0_06/db/bin/sysinfo.bat
jdk1.8.0_06/db/bin/sysinfo
jdk1.8.0_06/db/bin/setNetworkClientCP.bat
jdk1.8.0_06/db/bin/startNetworkServer.bat
jdk1.8.0_06/db/bin/setNetworkClientCP
jdk1.8.0_06/db/bin/setNetworkServerCP.bat
jdk1.8.0_06/db/bin/setEmbeddedCP.bat
jdk1.8.0_06/db/bin/ij
jdk1.8.0_06/db/bin/dblook
jdk1.8.0_06/db/bin/NetworkServerControl.bat
jdk1.8.0_06/db/bin/startNetworkServer
jdk1.8.0_06/db/bin/setEmbeddedCP
jdk1.8.0_06/db/bin/derby_common.bat
jdk1.8.0_06/db/bin/NetworkServerControl
jdk1.8.0_06/db/bin/dblook.bat
jdk1.8.0_06/db/bin/stopNetworkServer.bat
jdk1.8.0_06/db/bin/setNetworkServerCP
jdk1.8.0_06/db/bin/stopNetworkServer
jdk1.8.0_06/include/
jdk1.8.0_06/include/jvmti.h
jdk1.8.0_06/include/jdwpTransport.h
jdk1.8.0_06/include/linux/
jdk1.8.0_06/include/linux/jni_md.h
jdk1.8.0_06/include/linux/jawt_md.h
jdk1.8.0_06/include/jvmticmlr.h
jdk1.8.0_06/include/jawt.h
jdk1.8.0_06/include/jni.h
jdk1.8.0_06/include/classfile_constants.h
jdk1.8.0_06/jre/
jdk1.8.0_06/jre/THIRDPARTYLICENSEREADME.txt
jdk1.8.0_06/jre/README
jdk1.8.0_06/jre/COPYRIGHT
jdk1.8.0_06/jre/LICENSE
jdk1.8.0_06/jre/bin/
jdk1.8.0_06/jre/bin/keytool
jdk1.8.0_06/jre/bin/policytool
jdk1.8.0_06/jre/bin/pack200
jdk1.8.0_06/jre/bin/java
jdk1.8.0_06/jre/bin/jjs
jdk1.8.0_06/jre/bin/unpack200
jdk1.8.0_06/jre/bin/rmid
jdk1.8.0_06/jre/bin/orbd
jdk1.8.0_06/jre/bin/servertool
jdk1.8.0_06/jre/bin/tnameserv
jdk1.8.0_06/jre/bin/rmiregistry
jdk1.8.0_06/jre/THIRDPARTYLICENSEREADME-JAVAFX.txt
jdk1.8.0_06/jre/Welcome.html
jdk1.8.0_06/jre/lib/
jdk1.8.0_06/jre/lib/net.properties
jdk1.8.0_06/jre/lib/fontconfig.SuSE.11.properties.src
jdk1.8.0_06/jre/lib/fontconfig.SuSE.10.bfc
jdk1.8.0_06/jre/lib/psfontj2d.properties
jdk1.8.0_06/jre/lib/classlist
jdk1.8.0_06/jre/lib/jce.jar
jdk1.8.0_06/jre/lib/charsets.jar
jdk1.8.0_06/jre/lib/ext/
jdk1.8.0_06/jre/lib/ext/sunjce_provider.jar
jdk1.8.0_06/jre/lib/ext/sunpkcs11.jar
jdk1.8.0_06/jre/lib/ext/cldrdata.jar
jdk1.8.0_06/jre/lib/ext/jfxrt-controls.jar
jdk1.8.0_06/jre/lib/ext/zipfs.jar
jdk1.8.0_06/jre/lib/ext/jfxrt-graphics.jar
jdk1.8.0_06/jre/lib/ext/dnsns.jar
jdk1.8.0_06/jre/lib/ext/nashorn.jar
jdk1.8.0_06/jre/lib/ext/localedata.jar
jdk1.8.0_06/jre/lib/ext/sunec.jar
jdk1.8.0_06/jre/lib/ext/meta-index
jdk1.8.0_06/jre/lib/jfr/
jdk1.8.0_06/jre/lib/jfr/default.jfc
jdk1.8.0_06/jre/lib/jfr/profile.jfc
jdk1.8.0_06/jre/lib/javafx.properties
jdk1.8.0_06/jre/lib/security/
jdk1.8.0_06/jre/lib/security/java.policy
jdk1.8.0_06/jre/lib/security/blacklisted.certs
jdk1.8.0_06/jre/lib/security/blacklist
jdk1.8.0_06/jre/lib/security/US_export_policy.jar
jdk1.8.0_06/jre/lib/security/local_policy.jar
jdk1.8.0_06/jre/lib/security/trusted.libraries
jdk1.8.0_06/jre/lib/security/cacerts
jdk1.8.0_06/jre/lib/security/java.security
jdk1.8.0_06/jre/lib/fontconfig.bfc
jdk1.8.0_06/jre/lib/cmm/
jdk1.8.0_06/jre/lib/cmm/LINEAR_RGB.pf
jdk1.8.0_06/jre/lib/cmm/CIEXYZ.pf
jdk1.8.0_06/jre/lib/cmm/GRAY.pf
jdk1.8.0_06/jre/lib/cmm/PYCC.pf
jdk1.8.0_06/jre/lib/cmm/sRGB.pf
jdk1.8.0_06/jre/lib/fontconfig.RedHat.5.properties.src
jdk1.8.0_06/jre/lib/resources.jar
jdk1.8.0_06/jre/lib/psfont.properties.ja
jdk1.8.0_06/jre/lib/fontconfig.SuSE.11.bfc
jdk1.8.0_06/jre/lib/flavormap.properties
jdk1.8.0_06/jre/lib/hijrah-config-umalqura.properties
jdk1.8.0_06/jre/lib/images/
jdk1.8.0_06/jre/lib/images/cursors/
jdk1.8.0_06/jre/lib/images/cursors/motif_MoveDrop32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/motif_CopyDrop32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/motif_LinkNoDrop32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/invalid32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/cursors.properties
jdk1.8.0_06/jre/lib/images/cursors/motif_LinkDrop32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/motif_CopyNoDrop32x32.gif
jdk1.8.0_06/jre/lib/images/cursors/motif_MoveNoDrop32x32.gif
jdk1.8.0_06/jre/lib/arm/
jdk1.8.0_06/jre/lib/arm/libverify.so
jdk1.8.0_06/jre/lib/arm/client/
jdk1.8.0_06/jre/lib/arm/client/libjvm.so
jdk1.8.0_06/jre/lib/arm/client/libjsig.so
jdk1.8.0_06/jre/lib/arm/client/Xusage.txt
jdk1.8.0_06/jre/lib/arm/libjdwp.so
jdk1.8.0_06/jre/lib/arm/libjawt.so
jdk1.8.0_06/jre/lib/arm/libj2pkcs11.so
jdk1.8.0_06/jre/lib/arm/liblcms.so
jdk1.8.0_06/jre/lib/arm/libjaas_unix.so
jdk1.8.0_06/jre/lib/arm/libjava_crw_demo.so
jdk1.8.0_06/jre/lib/arm/libprism_es2_eglfb.so
jdk1.8.0_06/jre/lib/arm/libawt_headless.so
jdk1.8.0_06/jre/lib/arm/libsaproc.so
jdk1.8.0_06/jre/lib/arm/server/
jdk1.8.0_06/jre/lib/arm/server/libjvm.so
jdk1.8.0_06/jre/lib/arm/server/libjsig.so
jdk1.8.0_06/jre/lib/arm/server/Xusage.txt
jdk1.8.0_06/jre/lib/arm/libjavafx_font.so
jdk1.8.0_06/jre/lib/arm/libprism_common.so
jdk1.8.0_06/jre/lib/arm/libinstrument.so
jdk1.8.0_06/jre/lib/arm/libjpeg.so
jdk1.8.0_06/jre/lib/arm/libzip.so
jdk1.8.0_06/jre/lib/arm/libsunec.so
jdk1.8.0_06/jre/lib/arm/libawt.so
jdk1.8.0_06/jre/lib/arm/libjsig.so
jdk1.8.0_06/jre/lib/arm/libunpack.so
jdk1.8.0_06/jre/lib/arm/libsctp.so
jdk1.8.0_06/jre/lib/arm/libawt_xawt.so
jdk1.8.0_06/jre/lib/arm/libdt_socket.so
jdk1.8.0_06/jre/lib/arm/libjfr.so
jdk1.8.0_06/jre/lib/arm/libjsoundalsa.so
jdk1.8.0_06/jre/lib/arm/jli/
jdk1.8.0_06/jre/lib/arm/jli/libjli.so
jdk1.8.0_06/jre/lib/arm/libmanagement.so
jdk1.8.0_06/jre/lib/arm/libjava.so
jdk1.8.0_06/jre/lib/arm/libglass_lens_dfb.so
jdk1.8.0_06/jre/lib/arm/libjsound.so
jdk1.8.0_06/jre/lib/arm/libprism_sw.so
jdk1.8.0_06/jre/lib/arm/libjavafx_font_t2k.so
jdk1.8.0_06/jre/lib/arm/libglass.so
jdk1.8.0_06/jre/lib/arm/libjavafx_iio.so
jdk1.8.0_06/jre/lib/arm/libfontmanager.so
jdk1.8.0_06/jre/lib/arm/libnpt.so
jdk1.8.0_06/jre/lib/arm/jvm.cfg
jdk1.8.0_06/jre/lib/arm/libdcpr.so
jdk1.8.0_06/jre/lib/arm/liblens_porting.so
jdk1.8.0_06/jre/lib/arm/libnet.so
jdk1.8.0_06/jre/lib/arm/libhprof.so
jdk1.8.0_06/jre/lib/arm/libattach.so
jdk1.8.0_06/jre/lib/arm/libj2gss.so
jdk1.8.0_06/jre/lib/arm/libjsdt.so
jdk1.8.0_06/jre/lib/arm/libnio.so
jdk1.8.0_06/jre/lib/arm/libmlib_image.so
jdk1.8.0_06/jre/lib/arm/libglass_lens_eglfb.so
jdk1.8.0_06/jre/lib/arm/libsplashscreen.so
jdk1.8.0_06/jre/lib/arm/libkcms.so
jdk1.8.0_06/jre/lib/arm/libj2pcsc.so
jdk1.8.0_06/jre/lib/arm/libt2k.so
jdk1.8.0_06/jre/lib/javafx.platform.properties
jdk1.8.0_06/jre/lib/fontconfig.RedHat.6.bfc
jdk1.8.0_06/jre/lib/jvm.hprof.txt
jdk1.8.0_06/jre/lib/applet/
jdk1.8.0_06/jre/lib/sound.properties
jdk1.8.0_06/jre/lib/rt.jar
jdk1.8.0_06/jre/lib/fonts/
jdk1.8.0_06/jre/lib/fonts/LucidaTypewriterBold.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaBrightDemiItalic.ttf
jdk1.8.0_06/jre/lib/fonts/fonts.dir
jdk1.8.0_06/jre/lib/fonts/LucidaSansDemiBold.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaSansRegular.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaBrightDemiBold.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaBrightItalic.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaBrightRegular.ttf
jdk1.8.0_06/jre/lib/fonts/LucidaTypewriterRegular.ttf
jdk1.8.0_06/jre/lib/fontconfig.RedHat.6.properties.src
jdk1.8.0_06/jre/lib/logging.properties
jdk1.8.0_06/jre/lib/currency.data
jdk1.8.0_06/jre/lib/fontconfig.RedHat.5.bfc
jdk1.8.0_06/jre/lib/management-agent.jar
jdk1.8.0_06/jre/lib/management/
jdk1.8.0_06/jre/lib/management/management.properties
jdk1.8.0_06/jre/lib/management/jmxremote.password.template
jdk1.8.0_06/jre/lib/management/jmxremote.access
jdk1.8.0_06/jre/lib/management/snmp.acl.template
jdk1.8.0_06/jre/lib/fontconfig.Turbo.properties.src
jdk1.8.0_06/jre/lib/fontconfig.Turbo.bfc
jdk1.8.0_06/jre/lib/tzdb.dat
jdk1.8.0_06/jre/lib/jexec
jdk1.8.0_06/jre/lib/jsse.jar
jdk1.8.0_06/jre/lib/fontconfig.properties.src
jdk1.8.0_06/jre/lib/jfr.jar
jdk1.8.0_06/jre/lib/content-types.properties
jdk1.8.0_06/jre/lib/fontconfig.SuSE.10.properties.src
jdk1.8.0_06/jre/lib/meta-index
jdk1.8.0_06/jre/lib/calendars.properties
jdk1.8.0_06/jre/lib/oblique-fonts/
jdk1.8.0_06/jre/lib/oblique-fonts/fonts.dir
jdk1.8.0_06/jre/lib/oblique-fonts/LucidaSansDemiOblique.ttf
jdk1.8.0_06/jre/lib/oblique-fonts/LucidaSansOblique.ttf
jdk1.8.0_06/jre/lib/oblique-fonts/LucidaTypewriterOblique.ttf
jdk1.8.0_06/jre/lib/oblique-fonts/LucidaTypewriterBoldOblique.ttf
jdk1.8.0_06/lib/
jdk1.8.0_06/lib/jconsole.jar
jdk1.8.0_06/lib/orb.idl
jdk1.8.0_06/lib/jexec
jdk1.8.0_06/lib/sa-jdi.jar
jdk1.8.0_06/lib/dt.jar
jdk1.8.0_06/lib/arm/
jdk1.8.0_06/lib/arm/jli/
jdk1.8.0_06/lib/arm/jli/libjli.so
jdk1.8.0_06/lib/arm/libjawt.so
jdk1.8.0_06/lib/ir.idl
jdk1.8.0_06/lib/ct.sym
jdk1.8.0_06/lib/tools.jar
jdk1.8.0_06/man/
jdk1.8.0_06/man/man1/
jdk1.8.0_06/man/man1/javap.1
jdk1.8.0_06/man/man1/unpack200.1
jdk1.8.0_06/man/man1/extcheck.1
jdk1.8.0_06/man/man1/xjc.1
jdk1.8.0_06/man/man1/jar.1
jdk1.8.0_06/man/man1/jdeps.1
jdk1.8.0_06/man/man1/rmic.1
jdk1.8.0_06/man/man1/jmap.1
jdk1.8.0_06/man/man1/jconsole.1
jdk1.8.0_06/man/man1/jrunscript.1
jdk1.8.0_06/man/man1/serialver.1
jdk1.8.0_06/man/man1/jps.1
jdk1.8.0_06/man/man1/appletviewer.1
jdk1.8.0_06/man/man1/jmc.1
jdk1.8.0_06/man/man1/jstack.1
jdk1.8.0_06/man/man1/javadoc.1
jdk1.8.0_06/man/man1/keytool.1
jdk1.8.0_06/man/man1/policytool.1
jdk1.8.0_06/man/man1/pack200.1
jdk1.8.0_06/man/man1/wsimport.1
jdk1.8.0_06/man/man1/java.1
jdk1.8.0_06/man/man1/jhat.1
jdk1.8.0_06/man/man1/jinfo.1
jdk1.8.0_06/man/man1/jcmd.1
jdk1.8.0_06/man/man1/rmid.1
jdk1.8.0_06/man/man1/javac.1
jdk1.8.0_06/man/man1/wsgen.1
jdk1.8.0_06/man/man1/jdb.1
jdk1.8.0_06/man/man1/jstatd.1
jdk1.8.0_06/man/man1/tnameserv.1
jdk1.8.0_06/man/man1/jarsigner.1
jdk1.8.0_06/man/man1/orbd.1
jdk1.8.0_06/man/man1/servertool.1
jdk1.8.0_06/man/man1/javah.1
jdk1.8.0_06/man/man1/idlj.1
jdk1.8.0_06/man/man1/schemagen.1
jdk1.8.0_06/man/man1/javaws.1
jdk1.8.0_06/man/man1/jjs.1
jdk1.8.0_06/man/man1/jstat.1
jdk1.8.0_06/man/man1/native2ascii.1
jdk1.8.0_06/man/man1/jsadebugd.1
jdk1.8.0_06/man/man1/jvisualvm.1
jdk1.8.0_06/man/man1/rmiregistry.1
jdk1.8.0_06/man/ja
jdk1.8.0_06/man/ja_JP.UTF-8/
jdk1.8.0_06/man/ja_JP.UTF-8/man1/
jdk1.8.0_06/man/ja_JP.UTF-8/man1/pack200.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jstack.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jmc.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/native2ascii.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/rmid.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jcmd.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/servertool.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jstat.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jps.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/tnameserv.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jarsigner.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/orbd.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/keytool.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/javadoc.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/xjc.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/schemagen.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jinfo.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/wsgen.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/javac.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/idlj.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jvisualvm.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jsadebugd.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jar.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/javah.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/unpack200.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jjs.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/appletviewer.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/javaws.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jrunscript.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jmap.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/rmic.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/wsimport.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/extcheck.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/policytool.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jstatd.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/javap.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jdb.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/rmiregistry.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/serialver.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jdeps.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jconsole.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/jhat.1
jdk1.8.0_06/man/ja_JP.UTF-8/man1/java.1
jdk1.8.0_06/release
jdk1.8.0_06/src.zip
root@aruntu:/usr/local# ls
bin  etc  games  include  jdk1.8.0_06  jdk-8u6-linux-arm-vfp-hflt.tar.gz  lib  man  sbin  share  src
root@aruntu:/usr/local# ln -s jdk1.8.0_06 jdk
root@aruntu:/usr/local# ls -al
總計 85872
drwxr-xr-x 11 root root     4096  9月  9 00:57 .
drwxr-xr-x 10 root root     4096 10月 16  2013 ..
drwxr-xr-x  2 root root     4096 10月 16  2013 bin
drwxr-xr-x  2 root root     4096 10月 16  2013 etc
drwxr-xr-x  2 root root     4096 10月 16  2013 games
drwxr-xr-x  4 root root     4096  6月 10 22:18 include
lrwxrwxrwx  1 root root       11  9月  9 00:57 jdk -> jdk1.8.0_06
drwxr-xr-x  8 root root     4096  9月  9 00:55 jdk1.8.0_06
-rw-r--r--  1 root root 87885180  9月  9 00:54 jdk-8u6-linux-arm-vfp-hflt.tar.gz
drwxr-xr-x  5 root root     4096  6月 30 05:27 lib
lrwxrwxrwx  1 root root        9 10月 16  2013 man -> share/man
drwxr-xr-x  2 root root     4096 10月 16  2013 sbin
drwxr-xr-x  7 root root     4096  6月 10 21:58 share
drwxr-xr-x  2 root root     4096 10月 16  2013 src
root@aruntu:/usr/local# rm jdk-8u6-linux-arm-vfp-hflt.tar.gz 

把這6行加到/etc/profile的最後面
JAVA_HOME=/usr/local/jdk
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
export JAVA_HOME
export PATH
export CLASSPATH

繼續回到終端機
root@aruntu:/usr/local# update-alternatives --install "/usr/bin/java" "java" "/usr/local/jdk/bin/java" 1
update-alternatives: 以 /usr/local/jdk/bin/java 提供 自動模式 中的 /usr/bin/java (java)
root@aruntu:/usr/local# update-alternatives --install "/usr/bin/javac" "javac" "/usr/local/jdk/bin/javac" 1
root@aruntu:/usr/local# update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/local/jdk/bin/javaws" 1
update-alternatives: 錯誤: 找不到替代路徑 /usr/local/jdk/bin/javaws
root@aruntu:/usr/local# update-alternatives --set java /usr/local/jdk/bin/java
root@aruntu:/usr/local# update-alternatives --set javac /usr/local/jdk/bin/javac
root@aruntu:/usr/local# update-alternatives --set javaws /usr/local/jdk/bin/javaws
update-alternatives: 錯誤: 沒有 javaws 的替換檔
root@aruntu:/usr/local# source /etc/profile
root@aruntu:/usr/local# which java
/usr/bin/java
root@aruntu:/usr/local# java -version
java version "1.8.0_06"
Java(TM) SE Runtime Environment (build 1.8.0_06-b23)
Java HotSpot(TM) Client VM (build 25.6-b23, mixed mode)
root@aruntu:/usr/local# javac -version
javac 1.8.0_06


這樣就安裝好JDK8了，不過有一點我要抱怨的是
在上面我已經發現，JDK8沒有javaws（雖然我不知道這是什麼工具程式）
還有我原本期待會和32bit或64bit的JDK一樣
會有一個libnpjp2.so檔案在這樣的地方
/usr/local/jdk/jre/lib/arm/libnpjp2.so
這樣我就可以執行
ln -s <JAVA_HOME>/lib/arm/libnpjp2.so <MOZILLA_DIR>/plugins/libnpjp2.so
或是
ln -s <JAVA_HOME>/lib/arm/libnpjp2.so /opt/google/chrome/plugins/libnpjp2.so
這好像是我的瀏覽器的Java Plugin
可是JDK8沒有、沒有、就是沒有

好吧既然我上面的JDK8都用這樣子安裝了
我再去下載JDK7
那麼要切換JDK8和JDK7的時候怎麼辦呢？
就把這個
/usr/local/jdk
給刪除掉
它是一個symbolic link
然後再指向你想要起作用的JDK版本就好了
實際在JDK8到JDK7之間切換的指令我待會兒會寫上
我們先再去Oracle官網下載JDK7
和剛才下載JDK8的方法差不多，我不再詳述了
下載完之後請進終端機
一樣把下載來的jdk-7u60-linux-arm-vfp-hflt.tar.gz
解壓縮在
/usr/local

接著在終端機
root@aruntu:/usr/local# ls -al
總計 48
drwxr-xr-x 12 root root 4096  9月  9 01:29 .
drwxr-xr-x 10 root root 4096 10月 16  2013 ..
drwxr-xr-x  2 root root 4096 10月 16  2013 bin
drwxr-xr-x  2 root root 4096 10月 16  2013 etc
drwxr-xr-x  2 root root 4096 10月 16  2013 games
drwxr-xr-x  4 root root 4096  6月 10 22:18 include
lrwxrwxrwx  1 root root   11  9月  9 00:57 jdk -> jdk1.8.0_06
drwxr-xr-x  8 uucp  143 4096  5月  8 05:37 jdk1.7.0_60
drwxr-xr-x  8 root root 4096  9月  9 00:55 jdk1.8.0_06
drwxr-xr-x  5 root root 4096  6月 30 05:27 lib
lrwxrwxrwx  1 root root    9 10月 16  2013 man -> share/man
drwxr-xr-x  2 root root 4096 10月 16  2013 sbin
drwxr-xr-x  7 root root 4096  6月 10 21:58 share
drwxr-xr-x  2 root root 4096 10月 16  2013 src

你可以看到，現在jdk這個symbolic link是指向jdk1.8.0_06
那麼如果我這樣作

root@aruntu:/usr/local# rm jdk
root@aruntu:/usr/local# ln -s jdk1.7.0_60 jdk
root@aruntu:/usr/local# ls -al
總計 48
drwxr-xr-x 12 root root 4096  9月  9 01:32 .
drwxr-xr-x 10 root root 4096 10月 16  2013 ..
drwxr-xr-x  2 root root 4096 10月 16  2013 bin
drwxr-xr-x  2 root root 4096 10月 16  2013 etc
drwxr-xr-x  2 root root 4096 10月 16  2013 games
drwxr-xr-x  4 root root 4096  6月 10 22:18 include
lrwxrwxrwx  1 root root   11  9月  9 01:32 jdk -> jdk1.7.0_60
drwxr-xr-x  8 uucp  143 4096  5月  8 05:37 jdk1.7.0_60
drwxr-xr-x  8 root root 4096  9月  9 00:55 jdk1.8.0_06
drwxr-xr-x  5 root root 4096  6月 30 05:27 lib
lrwxrwxrwx  1 root root    9 10月 16  2013 man -> share/man
drwxr-xr-x  2 root root 4096 10月 16  2013 sbin
drwxr-xr-x  7 root root 4096  6月 10 21:58 share
drwxr-xr-x  2 root root 4096 10月 16  2013 src
root@aruntu:/usr/local# java -version
java version "1.7.0_60"
Java(TM) SE Runtime Environment (build 1.7.0_60-b19)
Java HotSpot(TM) Client VM (build 24.60-b09, mixed mode)
root@aruntu:/usr/local# javac -version
javac 1.7.0_60

哦哦太方便了
我如果要從JDK8切到JDK7，或是反過來從JDK7切換到JDK8
我只要把那個jdk連結刪掉，再重新把它指向我要的JDK版本的目錄就行了
不過很可惜，JDK7一樣沒有javaws（雖然我不知道這什麼東西）

啊…維基有寫，這就是javaws
http://en.wikipedia.org/wiki/Java_Web_Start

然後也一樣沒有/usr/local/jdk/jre/lib/libnpjp2.so

為什麼呢？我下錯版本了嗎？我是到Oracle官網下載的JDK沒錯啊
我中了幻術是不是
然後又搜出了這一篇放在官網上的文章

http://www.oracle.com/technetwork/java/javase/7u6-relnotes-1729681.html

這好像是
Java™ SE Development Kit 7, Update 6 (JDK 7u6)
在發布的時候一起發出的官方公告
有段重點是

JDK for Linux on ARM

This release includes support for a new platform, JDK for Linux on ARM. The product offers headful support for ARMv6 and ARMv7.

No support is available for WebStart, Plug-In, Java Flight Recorder, and Garbage First (G1) Collector. Also some features of the Serviceability Agent are not available for Linux on ARM platform.

The JDK for Linux on ARM does not include support for JavaFX SDK or JavaFX Runtime.

Java support on ARM is specific to the GNOME Desktop Environment version 1:2.30+7.

The demos and samples for Linux on ARM contain samples of webstart and applets, technologies that are not supported on Linux on ARM. These samples are still left in the demos and samples bundle to help developers who want to host applets on Linux on ARM, which can be accessed from other platforms.

官網寫著給ARM平台用的JDK就是不支援某些功能
像是WebStart (javaws)，插件 (libnpjp2.so)
還有啊啦啦啦啦
所以我該怎麼辦呢？

這裡有人在討論
http://forum.odroid.com/viewtopic.php?f=77&t=6094&view=unread

我看到這個建議
, why not simply stick with openjdk-7-jre ?
In Firefox, for example, there is Icedtea web plugin which supports OpenJDK 7 out-of-the box

然後我在同一篇文章裡也看到這個連結
http://www.oracle.com/technetwork/java/javase/emb7u4-relnotes-1579536.html#plugin
然後連結到了Oracle JDK官網


重點是在Oracle JDK 7u4有支持browser-plugin
How to Enable Java Plug-In
The headful version of Java SE for Embedded 7 Update 4 on ARMv7 supports Java™ Plug-In technology. (See Applet Developer's Guide for more information.) We have verified that Java SE for Embedded 7 Update 4 works with the Firefox 3.6 web browser. Mozilla's Gecko rendering engine version 1.9.0 FCS or later is required. Non-Mozilla web browsers, including the WebKit rendering engine (used in some non-Mozilla web browsers), are not supported at the time of this writing.

A symbolic link needs to be created in order to get the Java Plug-In to work. This link should point from the browser's plugins directory to the Java Plug-In shared library included in the JRE, and it can be created with the following command from a shell:

ln -s <JAVA_HOME>/lib/arm/libnpjp2.so <MOZILLA_DIR>/plugins/libnpjp2.so

In the above command, <JAVA_HOME> represents the directory where you installed the headful Java SE for Embedded 7 Update 4 bundle (for example, /usr/java/ejre1.7.0_4), and <MOZILLA_DIR> represents the directory where you installed your web browser (for example, /usr/lib/mozilla).

我快看到神經錯亂了
7u4的時候有Browser-plugin，然後7u6又不知道什麼原因不支援了
然後我現在裝的是JDK 7u60…
我只是想TM讓我的瀏覽器支援Java Plugin
煩死了，我直接裝OpenJDK的Icedtea web plugin好了


可是我剛才才把OpenJDK整個移除掉
現在我在aRuntu裡看鉅亨網Java線圖的時候
我的瀏覽器就會這樣
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056972299070166498?pid=6056972299070166498&oid=117546034720970496255

打開Synaptic套件管理員，選擇「icedtea-7-plugin」套件
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056977604640177746?pid=6056977604640177746&oid=117546034720970496255

按下「標記為安裝」
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056979632637738338?pid=6056979632637738338&oid=117546034720970496255

系統提示會一起安裝這些依賴套件，按下標記
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056980102516231826?pid=6056980102516231826&oid=117546034720970496255

按下上面的「套用」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056980302615238322?pid=6056980302615238322&oid=117546034720970496255

跳出「套用以下的變更」對話框，再按下一次「套用」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056980841294219890?pid=6056980841294219890&oid=117546034720970496255

開始安裝了，忍耐一下
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056981266675350738?pid=6056981266675350738&oid=117546034720970496255

安裝完成，按下套件管理員右上角的X關閉視窗
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056982049643756690?pid=6056982049643756690&oid=117546034720970496255

我再次戰戰競競的心情，打開了我的chromium瀏覽器，來到了鉅亨網的美股，選了蘋果這支股票，然後按了「Java線圖」，這一次哦耶哦耶，
看到瀏覽器上方的「需要您的授權才能執行IcedTea-Web Plugin (using IcedTea-Web 1.4 (1.4-3ubuntu2.1))...永遠在這個網站上執行　　僅限這次」了嗎？
那就選「永遠在這個網站上執行」
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056984368752293506?pid=6056984368752293506&oid=117546034720970496255


再跳一個對話框出來，選「For applet」和「Remember this option」，然後按下「Proceed」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056985600740468562?pid=6056985600740468562&oid=117546034720970496255

第一次載入Java Applet的時候，IcedTea-Web plugin居然Crash掉，太快了那個訊息只有兩秒我來不及擷圖
不過它叫我重新整理一下網頁，好吧我試試，結果在重新整理網頁之後，我的Java Applet線圖終於跳出來了
哦哦哦好爽，這是蘋果的股價的Java線圖
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6056987134659108418?pid=6056987134659108418&oid=117546034720970496255

所以我的aRuntu系統上面，那個我稍早前安裝的Oracle JDK有因為我後來安裝IcedTea-Web Plugin（會安裝OpenJDK的JRE）
有因為這樣把我的Oracle JDK給蓋掉嗎？我去了終端機檢查了一下
root@aruntu:/usr/local# java -version
java version "1.7.0_60"
Java(TM) SE Runtime Environment (build 1.7.0_60-b19)
Java HotSpot(TM) Client VM (build 24.60-b09, mixed mode)
root@aruntu:/usr/local# javac -version
javac 1.7.0_60

沒有，很好，這是我剛才安裝的Oracle JDK 7沒錯
現在我們再把Netbeans IDE開發環境給安裝上

在安裝Netbeans之前，我剛才發現一件事，我的/usr/local/jdk1.7.0_60這個目錄
它的owner和group居然是
root@aruntu:/usr/local# ls -al
總計 48
drwxr-xr-x 12 root root 4096  9月  9 01:32 .
drwxr-xr-x 10 root root 4096 10月 16  2013 ..
drwxr-xr-x  2 root root 4096 10月 16  2013 bin
drwxr-xr-x  2 root root 4096 10月 16  2013 etc
drwxr-xr-x  2 root root 4096 10月 16  2013 games
drwxr-xr-x  4 root root 4096  6月 10 22:18 include
lrwxrwxrwx  1 root root   11  9月  9 01:32 jdk -> jdk1.7.0_60
drwxr-xr-x  8 uucp  143 4096  5月  8 05:37 jdk1.7.0_60
drwxr-xr-x  8 root root 4096  9月  9 00:55 jdk1.8.0_06
drwxr-xr-x  5 root root 4096  6月 30 05:27 lib
lrwxrwxrwx  1 root root    9 10月 16  2013 man -> share/man
drwxr-xr-x  2 root root 4096 10月 16  2013 sbin
drwxr-xr-x  7 root root 4096  6月 10 21:58 share
drwxr-xr-x  2 root root 4096 10月 16  2013 src

什麼狗屁uucp什麼143啊？
那是誰？什麼group叫143
所以再去終端機執行了
root@aruntu:/usr/local# chown -R root:root /usr/local/jdk1.7.0_60
root@aruntu:/usr/local# ls -al
總計 48
drwxr-xr-x 12 root root 4096  9月  9 01:32 .
drwxr-xr-x 10 root root 4096 10月 16  2013 ..
drwxr-xr-x  2 root root 4096 10月 16  2013 bin
drwxr-xr-x  2 root root 4096 10月 16  2013 etc
drwxr-xr-x  2 root root 4096 10月 16  2013 games
drwxr-xr-x  4 root root 4096  6月 10 22:18 include
lrwxrwxrwx  1 root root   11  9月  9 01:32 jdk -> jdk1.7.0_60
drwxr-xr-x  8 root root 4096  5月  8 05:37 jdk1.7.0_60
drwxr-xr-x  8 root root 4096  9月  9 00:55 jdk1.8.0_06
drwxr-xr-x  5 root root 4096  6月 30 05:27 lib
lrwxrwxrwx  1 root root    9 10月 16  2013 man -> share/man
drwxr-xr-x  2 root root 4096 10月 16  2013 sbin
drwxr-xr-x  7 root root 4096  6月 10 21:58 share
drwxr-xr-x  2 root root 4096 10月 16  2013 src

把/usr/local/jdk1.7.0_60起所有的子目錄也一起都換成了owner和group都是root
現在來安裝netbeans了，到它的官網去
https://netbeans.org/

如下圖，選右上角的「Download」
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057043351390717250?pid=6057043351390717250&oid=117546034720970496255

上面的語言我選「English」，然後平台我選「Linux(x86/x64)」不用再找了，沒有「Linux(Arm)」
我知道不一定能裝起來，但是拼一下，有機會滴，在最右邊那個All, Free 203 MB的那個版本，按下「Download」鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057044459165017970?pid=6057044459165017970&oid=117546034720970496255

按下「保留」之後，開始下載
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057046257551564786?pid=6057046257551564786&oid=117546034720970496255

下載完之後，在aRuntu裡打開終端機，執行這些指令
為什麼一定要在aRuntu裡執行這些，是因為待會兒會跳出圖形介面對話框輔助安裝netbeans
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057047542997371794?pid=6057047542997371794&oid=117546034720970496255

按下Enter之後，出現了Netbeans的安裝歡迎畫面，我在這裡選擇Customize
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057048536803718962?pid=6057048536803718962&oid=117546034720970496255

預設是沒有安裝Apache Tomcat 8.0
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057049243557072994?pid=6057049243557072994&oid=117546034720970496255

我把它選了起來，當然要安裝Apache Tomcat 8.0啊，又不用錢，選了之後就按下OK鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057049900306378690?pid=6057049900306378690&oid=117546034720970496255

又回到歡迎畫面了，按下Next鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057050383558613938?pid=6057050383558613938&oid=117546034720970496255

好好好我按受授權條款，可以趕快開始安裝嗎？
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057050847961276594?pid=6057050847961276594&oid=117546034720970496255

好好好安裝JUnit，快點快點我要安裝
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057051391459850354?pid=6057051391459850354&oid=117546034720970496255

接下來我選擇了安裝目錄在/home/aruntu/netbeans-8.0
然後選擇我的JDK目錄在/usr/local/jdk
然後按下Next鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057052452528321682?pid=6057052452528321682&oid=117546034720970496255

接下來還會問glassfish的安裝目錄
我保留預設值的/home/aruntu/glassfish-4.0
然後按下Next鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057052818747230898?pid=6057052818747230898&oid=117546034720970496255

然後還會問tomcat 8.0的安裝目錄
我一樣保留預設值的/home/aruntu/apache-tomcat-8.0.3
我TM的臭基bye我的耐心快消耗光了，到底TM要問幾萬個問題
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057053430776763330?pid=6057053430776763330&oid=117546034720970496255

接著再跳出一個Summary對話框，再重複和你確認一次剛才的設定
好…按下「Install」鈕，我的理智線快斷裂了…應該沒有其他的對話框要確認了吧？
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057054185873925170?pid=6057054185873925170&oid=117546034720970496255

謝天謝地，開始安裝了，忍耐一下
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057054867350972386?pid=6057054867350972386&oid=117546034720970496255

謝天謝地，過了快十分鐘終於安裝好了，
這一個對話框重要的訊息只有要啟動netbeans的話從桌面的圖示來啟動，按下Finish鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057063028742902402?pid=6057063028742902402&oid=117546034720970496255

現在來看看我aRuntu的桌面上，哦真的有一個Netbeans-8.0.desktop的圖示，按下去看看
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057064408816902210?pid=6057064408816902210&oid=117546034720970496255

按下去之後居然TM的跳出了一個「拒絕不符權限的操作」對話框，按下「確定」關掉它
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057065189409133602?pid=6057065189409133602&oid=117546034720970496255

把這個桌面圖示檔的權限改成777，執行
# cd /home/aruntu/Desktop
# chmod 777 netbeans-8.0-desktop
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057065816269914354?pid=6057065816269914354&oid=117546034720970496255

再執行桌面的netbeans-8.0-desktop試試看，哇靠，開始啟動了，我High了
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057066781379961858?pid=6057066781379961858&oid=117546034720970496255

哦哦真TM的我折騰了那麼久終於值得了，終於成功啟動了Netbeans IDE開發環境
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057067303408464194?pid=6057067303408464194&oid=117546034720970496255

廢話少說，new一個Java Web Project來看看
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057068231022519906?pid=6057068231022519906&oid=117546034720970496255

上啊，螺旋丸
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057068951062401170?pid=6057068951062401170&oid=117546034720970496255

填入我的專案名稱為annTestUse01，然後按下Next鈕
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057069439792361538?pid=6057069439792361538&oid=117546034720970496255

然後Netbeans要求我設定一個master password，我先不設定，保持預設的空白，按Cancel
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057070373569951330?pid=6057070373569951330&oid=117546034720970496255

接著在Server的地方選擇熟悉的Apache Tomcat 8.0.3，然後再按Next，不直接按Finish是因為我很好奇還有什麼鬼屁要選？
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057071099208311634?pid=6057071099208311634&oid=117546034720970496255

哦我看到了熟悉的Spring MVC Framework和Hibernate應用程式框架
隨便選個Spring Framework 3.2.7，按下Finish
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057071964576210818?pid=6057071964576210818&oid=117546034720970496255

正在產生專案，耐心等一下
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057072635076741250?pid=6057072635076741250&oid=117546034720970496255

完成了，看到了那讓我TM中風指數增加的又似曾相識的applicationContext.xml
https://plus.google.com/photos/117546034720970496255/albums/6056972294083012833/6057073593895618514?pid=6057073593895618514&oid=117546034720970496255

好了，在CubieTruck上面居然能運行Netbeans IDE真是令人愉快
你也許會有疑問，為什麼我不安裝常用的Java開發工具Eclipse呢？
那是因為Eclipse還沒有辦法在Arm架構的開發板上面跑，我可以找到給X86用的32bit版本或是給X64架構用的64bit版本
可是就是沒有給Arm架構用的Eclipse arm版本，所以我才會想安裝Netbeans IDE
我們在這個任務裡安裝了Oracle JDK 8和7，後來我覺得還是用7這個版本好了，
所以現在/usr/local/jdk是指向/usr/local/jdk1.7.0_60
接著我們又安裝了瀏覽器的Java Plugin也就是IcedTea-Web Plugin，並成功在鉅亨網上面看到蘋果股價的Java Applet股價線圖
現在Netbeans又安裝完成，哦啊啊人生真是太美好了呀你說是嗎？
你能看到這裡，耐心真的超強，我要先給你鼓鼓掌
接下來我們進行下一個任務了



