objective 12 : 用自已的名字開一個使用者帳戶，並設定為預設登入的使用者

在CubieTruck機器的終端機，執行

先變身成root用戶，待會兒方便作事
$ sudo -i

建立一個新的用戶，叫stark
# adduser stark

終端機回應了這些訊息
所有的答案我都不想回答，直接按ENTER接受預設值
最後按下y再按ENTER，新的用戶stark就產生了


正在新增使用者 `stark' ...
增加新群組 `stark' (1004) ...
正在新增新使用者 `stark' (UID 1004) 到群組 `stark' ...
正在新增家目錄 `/home/stark' ...
正在從 `/etc/skel'複製檔案 ...
新 密碼： 
不良的密碼： 太短了
不良的密碼： 太簡單
再次輸入新的 密碼： 
passwd：密碼已成功地變更
正在改變 stark 的使用者訊息
請輸入新值，或直接按 ENTER 鍵以使用預設值
	全名 []: 
	房間號碼 []: 
	工作電話 []: 
	住家電話 []: 
	其它 []: 
以上輸入的資料正確嗎？[Y/n] y


新增用戶stark之後，我看了一下系統為他新增的家目錄
也就是/home/stark目錄
# ls -al /home/stark

終端機打印了，嗯…幾乎是家徒四壁
總計 28
drwxr-xr-x 2 stark stark 4096  9月 18 15:59 .
drwxr-xr-x 6 root  root  4096  9月 18 15:59 ..
-rw-r--r-- 1 stark stark  220  9月 18 15:59 .bash_logout
-rw-r--r-- 1 stark stark 3637  9月 18 15:59 .bashrc
-rw-r--r-- 1 stark stark  675  9月 18 15:59 .profile
-rw-r--r-- 1 stark stark 1601  9月 18 15:59 .Xdefaults
-rw-r--r-- 1 stark stark   14  9月 18 15:59 .xscreensaver


我想要讓這個新用戶stark，可以使用sudo指令變身成root用戶
所以我執行了下面的指令

先確認aRuntu系統裡，有我要執行的visudo指令存在
# which visudo

終端機打印了
/usr/sbin/visudo

系統裡真的有/usr/sbin/visudo工具存在，
再執行
# visudo

終端機出現了一個vi文字編輯器的畫面
找到這一行
root	ALL=(ALL:ALL) ALL
然後在這一行的下面新增這一行
stark   ALL=(ALL:ALL) ALL

然後按下Ctrl+X，接著回答y再按ENTER，離開vi編輯器
改好的設定會存在/etc/sudoers組態檔
# cat /etc/sudoers

終端機打印了
#
# This file MUST be edited with the 'visudo' command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults	env_reset
Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root	ALL=(ALL:ALL) ALL
stark   ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin  ALL = (ALL) NOPASSWD: ALL

# Allow members of group sudo to execute any command
%sudo	ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on "#include" directives:

#includedir /etc/sudoers.d
aruntu ALL=(ALL) NOPASSWD: ALL
root ALL=(ALL) NOPASSWD: ALL

記住你絕對不能直接自作聰明地下達這樣的指令
# vi /etc/sudoers
你絕對不能這樣直接去編輯/etc/sudoers這個檔案
你必須使用visudo指令來修改

新用戶stark產生了，可是還有群組的問題
我打印了一下系統的/etc/group，執行
# cat /etc/group

終端機打印了
root:x:0:aruntu
daemon:x:1:aruntu
bin:x:2:aruntu
sys:x:3:aruntu
adm:x:4:aruntu
tty:x:5:aruntu
disk:x:6:aruntu
lp:x:7:aruntu
mail:x:8:aruntu
news:x:9:aruntu
uucp:x:10:aruntu
man:x:12:aruntu
proxy:x:13:aruntu
kmem:x:15:aruntu
dialout:x:20:aruntu
fax:x:21:aruntu
voice:x:22:aruntu
cdrom:x:24:aruntu
floppy:x:25:aruntu
tape:x:26:aruntu
sudo:x:27:aruntu
audio:x:29:pulse,aruntu
dip:x:30:aruntu
www-data:x:33:aruntu
backup:x:34:aruntu
operator:x:37:aruntu
list:x:38:aruntu
irc:x:39:aruntu
src:x:40:aruntu
gnats:x:41:aruntu
shadow:x:42:aruntu
utmp:x:43:aruntu
video:x:44:aruntu
sasl:x:45:aruntu
plugdev:x:46:aruntu
staff:x:50:aruntu
games:x:60:aruntu
users:x:100:aruntu
nogroup:x:65534:aruntu
libuuid:x:101:aruntu
ssh:x:102:aruntu
messagebus:x:103:aruntu
netdev:x:104:aruntu
aruntu:x:1000:aruntu
fuse:x:105:aruntu
mediatomb:x:106:aruntu
crontab:x:107:aruntu
sambashare:x:108:aruntu
scanner:x:109:aruntu
colord:x:110:aruntu
utempter:x:111:aruntu
bluetooth:x:112:aruntu
ssl-cert:x:113:aruntu
avahi:x:114:aruntu
lpadmin:x:115:aruntu
nopasswdlogin:x:117:aruntu
syslog:x:118:aruntu
avahi-autoipd:x:119:aruntu
pulse:x:120:aruntu
pulse-access:x:121:aruntu
rtkit:x:122:aruntu
saned:x:123:aruntu
whoopsie:x:124:aruntu
stunnel4:x:125:aruntu
minidlna:x:126:aruntu
xrdp:x:127:
gdm:x:128:
lightdm:x:116:
ftp:x:129:
ftpuser:x:1001:tony
tony:x:1002:
git:x:1003:
stark:x:1004:

我注意到原來aRuntu 0.888系統上的預設用戶aruntu
其實加入了一堆群組，如果剛才新增的新用戶stark沒有加入這些群組
那麼可能執行某些系統功能會受到限制
所以我決定，只要aruntu用戶有加入的群組，那麼新用戶stark也要加入
我執行了
# usermod -a -G root,daemon,bin,sys,adm,tty,disk,lp,mail,news stark
# usermod -a -G uucp,man,proxy,kmem,dialout,fax,voice,cdrom,floppy,tape stark
# usermod -a -G sudo,audio,dip,www-data,backup,operator,list,irc,src,gnats stark
# usermod -a -G shadow,utmp,video,sasl,plugdev,staff,games,users,nogroup,libuuid stark
# usermod -a -G ssh,messagebus,netdev,aruntu,fuse,mediatomb,crontab,sambashare,scanner,colord stark
# usermod -a -G utempter,bluetooth,ssl-cert,avahi,lpadmin,nopasswdlogin,syslog,avahi-autoipd,pulse,pulse-access stark
# usermod -a -G rtkit,saned,whoopsie,stunnel4,minidlna,ftpuser stark

順便一提
如果要把用戶stark恢復成原來還沒有加入所有群組的狀態
就執行
# usermod -G stark stark
這個動作是把用戶stark設定成只有在stark群組

現在為止我們新增了新用戶stark，設置了用戶密碼
然後為他執行了visudo指令（讓用戶stark將來可以執行sudo -i指令變成root用戶）
然後又把stark用戶加到了所有預設用戶aruntu所在的群組

其實用戶aruntu的家目錄
/home/aruntu
這個目錄下面，還有一堆檔案和目錄都沒有複製到/home/stark
因為我在想有些設定檔案裡面，直接寫著aruntu的用戶名
而且可能有好幾千個，這樣我如果一個一個改，我就瘋了
就算用sed指令遞迴所有的子目錄，把每個檔案裡的aruntu改成stark
工程也太浩大了，難道不能簡單一點嗎？

剩最後一個/etc/slim.conf
改完就直接TM的重開機，看看會不會自已乖乖用stark用戶自動登入

動手修改之前，先把原來的存檔一份，小心駛得萬年船
# cp /etc/slim.conf /etc/slim.conf.default

重新開機之後
系統真的使用stark用戶的身分自動登入了
不過ssh server和vnc server都不再能連線了
我覺得很納悶
vnc server不能連線的原因我還知道
因為stark的家目錄裡應該要有個檔案
/home/stark/.config/lxsession/LXDE/autostart
這個檔案裡面應該要有一行
@x11vnc -forever -geometry 1024x768 -rfbauth /home/stark/.vnc/passwd -o /tmp/x11vnc.log -rfbport 27900
而且
我的新用戶stark的VNC連線的密碼檔
/home/stark/.vnc/passwd
也不存在
所以vnc server沒有跑起來，我是可以理解的
不過ssh server不能跑起來
我就很納悶
我在筆記型電腦上的終端機
一樣使用
$ ssh mycubie
或是
$ ssh -i /home/anntony/.ssh/private_key_from_cubie aruntu@192.168.0.161
沒有用
只會出現
Permission denied (publickey).
然後我去CubieTruck機器上（老老實實接了螢幕和鍵盤滑鼠T_T，遜，我網管耶還接螢幕鍵盤滑鼠，簡直奇恥大辱）
我查看了
/var/log/auth.log

我下了這樣的指令

變成root
$ sudo -i

然後打印和ssh有關的那些記錄行
# cat auth.log | grep ssh


結果終端機打印了
（上面還有超多超多訊息…但不是重點）
Sep 18 22:10:32 cubie001 sshd[1634]: Authentication refused: bad ownership or modes for file /home/aruntu/.ssh/authorized_keys
Sep 18 22:10:32 cubie001 sshd[1634]: Connection closed by 192.168.0.12 [preauth]
（下面也有超多超多訊息…但不是重點）

嗯，我抓到問題了
我又下了這個指令，看了一下authorized_keys這個檔案到底是什麼權限？
# ls -al /home/aruntu/.ssh/authorized_keys


終端機打印了
-rw-rw-r-- 1 aruntu aruntu 797  9月 18 22:04 /home/aruntu/.ssh/authorized_keys

為什麼會是664，好奇怪，難不成我剛才新增stark用戶的時候，有作什麼讓這個原來該是權限600的檔案改變成664了嗎？
不管它，這就是ssh server拒絕連線的原因，把它改回權限600
# chmod 600 /home/aruntu/.ssh/authorized_keys

然後再回筆記型電腦上的終端機，試著執行ssh指令連線看看，耶，結果正常了，混帳東西

接著再解決vnc server不能連線的問題
直接把aruntu用戶家目錄下的.config和.vnc複製到stark用戶的家目錄下面，應該就可以了吧
執行

原來stark用戶的先備份一下（執行下面的指令時，我的stark用戶是登出狀態，使用原aruntu用戶登入）
# cd /home/stark
# mv .config .config.default

把aruntu用戶的.config目錄，複製到stark用戶的家目錄下面
# cp -R /home/aruntu/.config /home/stark/
# cp -R /home/aruntu/.vnc /home/stark/

檢查看看是不是真的複製過來了？
# ls -al | grep config
# ls -al | grep vnc

把整個.config目錄都改成擁有人和群組都是用戶stark
# chown -R stark:stark /home/stark/.config
# chown -R stark:stark /home/stark/.vnc

剛才複製過來的.config和.vnc目錄
裡面應該有幾百個純文字檔案，裡面都寫死了aruntu用戶的名字
我們再作一件事，把剛才複製過來的.config和.vnc目錄
遞迴檢查所有子目錄，如果有任何檔案裡，有aruntu這個字眼，
我們就把aruntu換成stark

不過我有點忘了要怎麼作
所以我Google搜尋了
「linux command sed how to recurisive dir replace a string」
然後跳出了190000個結果頁面，第一個連結的頁面是：
http://stackoverflow.com/questions/1583219/awk-sed-how-to-do-a-recursive-find-replace-of-a-string

發問者問了：
How to I find and replace every occurrence of:

subdomainA.example.com
with

subdomainB.example.com
in every text file under the /home/www/ directory tree (recursive find/replace).

答案簡單明瞭
cd /home/www

find . -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'

那我就依樣畫葫蘆了
在動手之前，我想先記錄一下
/home/stark/.config
/home/stark/.vnc
這兩個目錄（包含所有子目錄）裡面，有關鍵字aruntu出現的那些檔案
所以我先執行了
# find /home/stark/.config -xdev -type f -print0 | xargs -0 grep -H "aruntu" >> /root/temp/the_files_contain_keyword_aruntu_in_home_stark_.config_dir.txt
# find /home/stark/.vnc -xdev -type f -print0 | xargs -0 grep -H "aruntu" >> /root/temp/the_files_contain_keyword_aruntu_in_home_stark_.vnc_dir.txt
上面的這兩行指令，會幫我記錄
/home/stark/.config目錄裡（包含所有子目錄），所有出現關鍵字aruntu的檔案到
/root/temp/the_files_contain_keyword_aruntu_in_home_stark_.config_dir.txt
還有記錄
/home/stark/.vnc目錄裡（包含所有子目錄），所有出現關鍵字aruntu的檔案到
/root/temp/the_files_contain_keyword_aruntu_in_home_stark_.vnc_dir.txt


現在要執行sed指令來把aruntu字串置換成stark字串了
執行指令如下：
# cd /home/stark/.config
# find . -type f -print0 | xargs -0 sed -i 's/aruntu/stark/g'
# cd /home/stark/.vnc
# find . -type f -print0 | xargs -0 sed -i 's/aruntu/stark/g'


把這兩個目錄裡所有的aruntu字串置換成stark字串之後
再來看看
執行
# find /home/stark/.config -xdev -type f -print0 | xargs -0 grep -H "stark" >> /root/temp/the_files_contain_keyword_stark_in_home_stark_.config_dir.txt
# find /home/stark/.vnc -xdev -type f -print0 | xargs -0 grep -H "stark" >> /root/temp/the_files_contain_keyword_stark_in_home_stark_.vnc_dir.txt
為什麼要執行這兩行的原因，和稍早執行置換的sed指令之前一樣，我懶得再說明一次



